Metadata-Version: 2.1
Name: aws-sa
Version: 1.3.9
Summary: A aws script automation deploy
Home-page: https://github.com/jpdik/aws-script-automation
Author: João Paulo de Melo
Author-email: jpmdik@gmail.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
Requires-Dist: awscli
Requires-Dist: ruamel.yaml

# aws-script-automation [![nvm version](https://img.shields.io/badge/version-v1.3.9-blue.svg)](https://pypi.org/manage/project/aws-sa/releases/) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/aws-sa.svg?color=orange)
Scripting for AWS API configurations automation

## Instalation

Use pip to make instalation:

`pip install --user aws-sa`

## Loading documentation files to deploy

Just pass the file path in the argument:

`aws-sa [filepath .json or .yaml]`

Examples:

`aws-sa file.yaml`

or

`aws-sa /home/user/Documents/file.json`

## Configuration

At the first time you need from AWS API key from <a href='https://console.aws.amazon.com/iam/home'>IAM User</a>.

Insert de values into the next steps:

`AWS Access Key ID:<YOU_AWS_ID>`

`AWS Secret Access Key:<SECRET_KEY>`

`Default region name:<YOUR_REGION>`

### First step: Configure endpoints

1. Insert the Authorization key and domain from endpoints:

    `Insert Authorization key (example: asd09aus81923aas112): <AUTHORIZATION_KEY>`

    `Insert Domain (example: https://example.com): <DOMAIN_WITH_HTTP(S)>`

2. After insert the name from deploy:

    `Insert Deploy Name [prod]: <DEPLOY_NAME>`

The values ​​are stored if you want to use them later (bracketed value). If you want to use it, just press enter in the field.

### Second step: Configure CloudWatch Group

1. Insert the name from CloudWatch group:

    `Insert CloudWatch Group [example]: <NAME_GROUP>`

### third step: Configure custom domain

1. Select a custom domain using arrow keys.

2. Insert value from Base path:

    `Insert Base Path [v1]: <BASE_PATH>`

## Output

A documentation file with the same name as the imported file will be generated with the ending **.prod.yaml**.

## Set name API

You can use different names from documentation file using:

`aws-sa [file] --name [new_name]`

Example:

`aws-sa file.yaml --name test`

**Observation**: You only can use this command on create, not permitted in merge or overwrite.

## Use temporary region

You can use a temporary region into API using:

`aws-sa [file] --region [region_name]`

Example:

`aws-sa file.yaml --region us-east-2`

You can find the region values <a href="https://docs.aws.amazon.com/pt_br/general/latest/gr/rande.html">here</a>.

## Change Region

You can change the default region using:

`aws configure set default.region [region]`

## Merge or overwrite documentation file

You can merge or overwrite a API with another documentation file using:

`aws-sa [file] --id <ID_API> [--overwrite|--merge]`

## Configure automatically gateway-responses

You can configure automatically gateway-responses using:

`aws-sa --id <ID_API> [--gateway-response]`

