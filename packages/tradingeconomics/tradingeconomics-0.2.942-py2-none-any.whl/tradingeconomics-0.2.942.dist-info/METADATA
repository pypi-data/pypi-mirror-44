Metadata-Version: 2.0
Name: tradingeconomics
Version: 0.2.942
Summary: Library to download data from Trading Economics API
Home-page: https://github.com/ieconomics/open-api
Author: Trading Economics
Author-email: olexandr.baturin@tradingeconomics.com
License: MIT
Download-URL: https://github.com/ieconomics/open-api/raw/master/python/dist/tradingeconomics-0.2.942.zip
Keywords: tradingeconomics,data
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 2.7
Requires-Dist: pandas
Requires-Dist: websocket-client

# Trading Economics API



### Load Data Directly Into Python

If you donâ€™t have a copy of Python installed on your computer, you can get it from:

https://www.python.org/downloads/ 

It's recomended to install pip, it is a package management system used to manage software packages written in Python. 
You can find all information on https://packaging.python.org/installing/. 

Then just type in Python (command line) 
```python
pip install tradingeconomics
```

There is a possibility to install package using easy_install 
```python
easy_install https://pypi.python.org/packages/4c/b4/e2e2a9668be305a42c0644b3eb5d4d1034ae062653ef737d7e80c1423d28/tradingeconomics-0.2.X.tar.gz
```
*Where 'X' type the last version number.*

* As alternative you can download the package from https://pypi.python.org/pypi/tradingeconomics and then follow the installation instructions for [Python 3.x](https://docs.python.org/3/install/) or [Python 2.x](https://docs.python.org/2/install/)  

* Another method is to download the GitHub repo: https://github.com/ieconomics/open-api/tree/master/python and then place it in your Python library folder.

### Lets start
In command window type

```python
import tradingeconomics as te
te.login('APIkey')
```
If you don't have APIkey just left empty space in brackets.  

**Note:** Without APIkey datasets will default to returning sample data.

* Results are available in differente formats, such as : JSON, pandas.DataFrame or dictionary.

**For example:**


To get calendar data for specific country, in data frame format, just type
```python
te.getCalendarData(country = 'Italy', output_type = 'df')
```




