# coding: utf-8

"""
    BIMData API

    BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.  # noqa: E501

    OpenAPI spec version: v1
    Contact: contact@bimdata.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import bimdata_api_client
from bimdata_api_client.api.bcf_api import BcfApi  # noqa: E501
from bimdata_api_client.rest import ApiException


class TestBcfApi(unittest.TestCase):
    """BcfApi unit test stubs"""

    def setUp(self):
        self.api = bimdata_api_client.api.bcf_api.BcfApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_coloring(self):
        """Test case for create_coloring

        """
        pass

    def test_create_comment(self):
        """Test case for create_comment

        """
        pass

    def test_create_full_topic(self):
        """Test case for create_full_topic

        """
        pass

    def test_create_selection(self):
        """Test case for create_selection

        """
        pass

    def test_create_topic(self):
        """Test case for create_topic

        """
        pass

    def test_create_viewpoint(self):
        """Test case for create_viewpoint

        """
        pass

    def test_create_visibility(self):
        """Test case for create_visibility

        """
        pass

    def test_delete_coloring(self):
        """Test case for delete_coloring

        """
        pass

    def test_delete_comment(self):
        """Test case for delete_comment

        """
        pass

    def test_delete_selection(self):
        """Test case for delete_selection

        """
        pass

    def test_delete_topic(self):
        """Test case for delete_topic

        """
        pass

    def test_delete_viewpoint(self):
        """Test case for delete_viewpoint

        """
        pass

    def test_delete_visibility(self):
        """Test case for delete_visibility

        """
        pass

    def test_download_bcf_export(self):
        """Test case for download_bcf_export

        """
        pass

    def test_full_update_bcf_project(self):
        """Test case for full_update_bcf_project

        """
        pass

    def test_full_update_coloring(self):
        """Test case for full_update_coloring

        """
        pass

    def test_full_update_comment(self):
        """Test case for full_update_comment

        """
        pass

    def test_full_update_full_topic(self):
        """Test case for full_update_full_topic

        """
        pass

    def test_full_update_selection(self):
        """Test case for full_update_selection

        """
        pass

    def test_full_update_topic(self):
        """Test case for full_update_topic

        """
        pass

    def test_full_update_viewpoint(self):
        """Test case for full_update_viewpoint

        """
        pass

    def test_full_update_visibility(self):
        """Test case for full_update_visibility

        """
        pass

    def test_get_bcf_project(self):
        """Test case for get_bcf_project

        """
        pass

    def test_get_bcf_projects(self):
        """Test case for get_bcf_projects

        """
        pass

    def test_get_coloring(self):
        """Test case for get_coloring

        """
        pass

    def test_get_colorings(self):
        """Test case for get_colorings

        """
        pass

    def test_get_comment(self):
        """Test case for get_comment

        """
        pass

    def test_get_comments(self):
        """Test case for get_comments

        """
        pass

    def test_get_extensions(self):
        """Test case for get_extensions

        """
        pass

    def test_get_full_topic(self):
        """Test case for get_full_topic

        """
        pass

    def test_get_full_topics(self):
        """Test case for get_full_topics

        """
        pass

    def test_get_selection(self):
        """Test case for get_selection

        """
        pass

    def test_get_selections(self):
        """Test case for get_selections

        """
        pass

    def test_get_snapshot(self):
        """Test case for get_snapshot

        """
        pass

    def test_get_topic(self):
        """Test case for get_topic

        """
        pass

    def test_get_topic_viewpoints(self):
        """Test case for get_topic_viewpoints

        """
        pass

    def test_get_topics(self):
        """Test case for get_topics

        """
        pass

    def test_get_user(self):
        """Test case for get_user

        """
        pass

    def test_get_viewpoint(self):
        """Test case for get_viewpoint

        """
        pass

    def test_get_viewpoints(self):
        """Test case for get_viewpoints

        """
        pass

    def test_get_visibilities(self):
        """Test case for get_visibilities

        """
        pass

    def test_get_visibility(self):
        """Test case for get_visibility

        """
        pass

    def test_update_bcf_project(self):
        """Test case for update_bcf_project

        """
        pass

    def test_update_coloring(self):
        """Test case for update_coloring

        """
        pass

    def test_update_comment(self):
        """Test case for update_comment

        """
        pass

    def test_update_extensions(self):
        """Test case for update_extensions

        """
        pass

    def test_update_full_topic(self):
        """Test case for update_full_topic

        """
        pass

    def test_update_selection(self):
        """Test case for update_selection

        """
        pass

    def test_update_topic(self):
        """Test case for update_topic

        """
        pass

    def test_update_viewpoint(self):
        """Test case for update_viewpoint

        """
        pass

    def test_update_visibility(self):
        """Test case for update_visibility

        """
        pass


if __name__ == '__main__':
    unittest.main()
