Metadata-Version: 2.1
Name: china-region
Version: 0.0.4
Summary: 中国地区邮编经纬度/工具.
Home-page: https://github.com/sfyc23/China-zip-code-latitude-and-longitude
Author: sfyc23
Author-email: sfyc23@gmail.com
License: MIT
Description: 
        中国地区邮编经纬度/工具（Python 版）
        =============================
        [![pypi](https://img.shields.io/badge/pypi-0.0.3-yellow.svg)](https://pypi.org/project/pywubi) 
        ![python_vesion](https://img.shields.io/badge/python-%3E3-green.svg)  
        
           
        找到中国地区的主要城市的经纬度与邮编
        
        ## 关于
        
        * GitHub: https://github.com/sfyc23/China-zip-code-latitude-and-longitude  
        * License: MIT license  
        * PyPI: https://pypi.org/project/china-region/ 
        * Python version: 3
        
        ## 特性
        
        1. 将词组转成五笔编码。比如词语：生死有命。换成五笔码为：'tgdw'；
        2. 返回汉字的所有可能的编码。如汉字：为 。换成五笔码为： 'ylyi', 'yly', 'yl', 'o'；
        3. 将一段句子，转成五笔码。如:天气不错，我们去散步吧!：五笔码为：'gdi', 'rnb', 'gii', 'qajg', '，', 'trnt', 'wun', 'fcu', 'aety', 'hir', 'kcn', '!'
        
        ## 安装
        
            $ pip install china-region
        
        ## 升级
        
            $ pip install -U china-region
        
        ## 使用示例
        
            >>> from pywubi import wubi
            >>> wubi('我爱你')
            ['trnt', 'epdc', 'wqiy']
            >>> wubi('我爱你',multicode=True)  # 返回汉字的所有可能的五笔编码
            [['trnt', 'trn', 'q'], ['epdc', 'epd', 'ep'], ['wqiy', 'wqi', 'wq']]
            >>> wubi('我爱你', single=False) # 以词组的方法处理这些汉字
            ['tewq']
        
        ## Lincese
        
            MIT License
            
            Copyright (c) 2019  Thunder Bouble
            
        
Keywords: China,zipCode,latitude,longitude
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.6.0
Description-Content-Type: text/markdown
