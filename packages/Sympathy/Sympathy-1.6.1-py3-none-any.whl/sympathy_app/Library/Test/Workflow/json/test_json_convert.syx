<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" uuid="{425c87f8-fc1d-44be-8c18-7c2694c4f3a9}">
  <label></label>
  <ports/>
  <node id="org.sysess.sympathy.create.createjson" port_format="1.1" uuid="{2a5bc619-21d4-4471-b24b-decee7ed95b3}" x="1400.0" y="1975.0">
    <label>Manually Create JSON</label>
    <version>0.1</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2018, System Engineering Software Society</copyright>
    <parameters type="json">
    {
      "code": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "",
        "order": 0,
        "type": "string",
        "value": "[1, 2, 3, False, {'a': [1,2], 'c': 22}]"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="output" scheme="hdf5" type="json" type_base="json" uuid="{720150a0-9a4e-488c-ae04-7c5966663f2a}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{4e18d700-bcf3-4759-910a-727145041ad1}" x="2000.0" y="1800.0">
    <label>Conditional error/warning</label>
    <version>1.0</version>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2018, System Engineering Software Society</copyright>
    <parameters type="json">
    {
      "error_msg": {
        "editor": null,
        "label": "Error message:",
        "order": 1,
        "type": "string",
        "value": "Error!"
      },
      "error_type": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Severity:",
        "list": ["Error", "Warning", "Output"],
        "mode": "selected",
        "order": 2,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "predicate": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "Predicate function:",
        "order": 0,
        "type": "string",
        "value": "lambda arg: arg[0].get() != arg[1].get()"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="in" scheme="hdf5" type="(json, json)" type_base="&lt;a&gt;" uuid="{598c60b1-439c-453b-a3b5-f4bf782a466d}">
        <label>Input</label>
      </input>
      <output key="out" scheme="hdf5" type="(json, json)" type_base="&lt;a&gt;" uuid="{96ab9114-c6b3-4acc-9668-0feccbf7f6ef}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.tuple2" port_format="1.1" uuid="{4ea535c8-8e1a-4ab0-b71f-b76d7bdb0d9d}" x="1850.0" y="1800.0">
    <label>Tuple</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2018, System Engineering Software Society</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="json" type_base="&lt;a&gt;" uuid="{556aa189-4d2d-46c3-98ff-921e1fad31b5}">
        <label>Input</label>
      </input>
      <input key="input" scheme="hdf5" type="json" type_base="&lt;b&gt;" uuid="{698c3a2b-53d2-4117-b47c-8ab95c6fc97d}">
        <label>Input</label>
      </input>
      <output key="output" scheme="hdf5" type="(json, json)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{e5adeaa5-536c-40a9-bd03-82fa600b8953}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{5abc3da4-60ed-45e5-b79c-a5acaa59eb1d}" x="2000.0" y="1975.0">
    <label>Conditional error/warning</label>
    <version>1.0</version>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2018, System Engineering Software Society</copyright>
    <parameters type="json">
    {
      "error_msg": {
        "editor": null,
        "label": "Error message:",
        "order": 1,
        "type": "string",
        "value": "Error!"
      },
      "error_type": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Severity:",
        "list": ["Error", "Warning", "Output"],
        "mode": "selected",
        "order": 2,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "predicate": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "Predicate function:",
        "order": 0,
        "type": "string",
        "value": "lambda arg: arg[0].get() != arg[1].get()"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="in" scheme="hdf5" type="(json, json)" type_base="&lt;a&gt;" uuid="{8fbd0bcb-011f-490f-b94c-e4fbc6039509}">
        <label>Input</label>
      </input>
      <output key="out" scheme="hdf5" type="(json, json)" type_base="&lt;a&gt;" uuid="{994bd1df-f83b-47d7-9c72-5d4e766c2409}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.json.dicttojson" port_format="1.1" uuid="{61ed2b37-bccd-4de8-9b8e-4c6c8848f7f3}" x="1700.0" y="1850.0">
    <label>Dict to Json</label>
    <version></version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2018, System Engineering Software Society</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="json_dict" scheme="hdf5" type="{json}" type_base="{json}" uuid="{08c0b08f-0e3c-41e0-9005-b81f1ca2c3d8}">
        <label>JSON dict</label>
      </input>
      <output key="json" scheme="hdf5" type="json" type_base="json" uuid="{bfb23e0f-3c05-42d2-87c7-4578dc383fa9}">
        <label>JSON</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.json.listtojson" port_format="1.1" uuid="{664e898c-cc65-4de3-ab2b-4d1c2e611737}" x="1700.0" y="2025.0">
    <label>List to Json</label>
    <version></version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2018, System Engineering Software Society</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="json_list" scheme="hdf5" type="[json]" type_base="[json]" uuid="{61cdf83a-40e3-40fa-a1d2-9670945a6fc6}">
        <label>JSON list</label>
      </input>
      <output key="json" scheme="hdf5" type="json" type_base="json" uuid="{31db49f6-2ccb-40b1-bce9-eda2e09e5905}">
        <label>JSON</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createjson" port_format="1.1" uuid="{7621379e-3137-4f09-9dcb-49960392f45c}" x="1400.0" y="1800.0">
    <label>Manually Create JSON</label>
    <version>0.1</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2018, System Engineering Software Society</copyright>
    <parameters type="json">
    {
      "code": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "",
        "order": 0,
        "type": "string",
        "value": "{'a': [1, 2, 3], 'b': {'c': 1}} "
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="output" scheme="hdf5" type="json" type_base="json" uuid="{e966a90f-6f85-4e15-b75c-7402abab32b8}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.json.jsontodict" port_format="1.1" uuid="{7773f610-4fac-4be1-8bd1-a8d5a496c057}" x="1550.0" y="1850.0">
    <label>Json to Dict</label>
    <version></version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2018, System Engineering Software Society</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="json" scheme="hdf5" type="json" type_base="json" uuid="{b3872043-45c9-4cc4-b82a-86393ff39cae}">
        <label>JSON</label>
      </input>
      <output key="json_dict" scheme="hdf5" type="{json}" type_base="{json}" uuid="{75650256-4230-4038-903f-0638d085be86}">
        <label>JSON dict</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.json.jsontolist" port_format="1.1" uuid="{bd388f53-8ad0-4a37-ae58-18cf98216b04}" x="1550.0" y="2025.0">
    <label>Json to List</label>
    <version></version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2018, System Engineering Software Society</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="json" scheme="hdf5" type="json" type_base="json" uuid="{7b0d0c84-b46d-4c52-b3a7-b416c9213f3f}">
        <label>JSON</label>
      </input>
      <output key="json_list" scheme="hdf5" type="[json]" type_base="[json]" uuid="{72fcf17c-6cd7-4e2a-90f3-411791f914ff}">
        <label>JSON list</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.tuple2" port_format="1.1" uuid="{c1e4edc0-af91-464f-ab46-40e97a81b88d}" x="1850.0" y="1975.0">
    <label>Tuple</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2018, System Engineering Software Society</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="json" type_base="&lt;a&gt;" uuid="{8e5de56e-e492-47c8-bdd1-346266066df9}">
        <label>Input</label>
      </input>
      <input key="input" scheme="hdf5" type="json" type_base="&lt;b&gt;" uuid="{9e60396a-719c-4a6d-99cc-c1a1ce084ccf}">
        <label>Input</label>
      </input>
      <output key="output" scheme="hdf5" type="(json, json)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{1a14bdb3-45fc-4bbe-b78b-0ce81a940231}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <connection type="json" uuid="{0759e0eb-e5a3-48b8-a734-c1cf2f4c87fe}">
    <source node="{7621379e-3137-4f09-9dcb-49960392f45c}" port="{e966a90f-6f85-4e15-b75c-7402abab32b8}"/>
    <destination node="{4ea535c8-8e1a-4ab0-b71f-b76d7bdb0d9d}" port="{556aa189-4d2d-46c3-98ff-921e1fad31b5}"/>
  </connection>
  <connection type="(json, json)" uuid="{09ea58f1-f112-4607-b54e-4beb2b78adec}">
    <source node="{c1e4edc0-af91-464f-ab46-40e97a81b88d}" port="{1a14bdb3-45fc-4bbe-b78b-0ce81a940231}"/>
    <destination node="{5abc3da4-60ed-45e5-b79c-a5acaa59eb1d}" port="{8fbd0bcb-011f-490f-b94c-e4fbc6039509}"/>
  </connection>
  <connection type="json" uuid="{0d560d87-cc03-4916-b7e3-0731374dd5b1}">
    <source node="{664e898c-cc65-4de3-ab2b-4d1c2e611737}" port="{31db49f6-2ccb-40b1-bce9-eda2e09e5905}"/>
    <destination node="{c1e4edc0-af91-464f-ab46-40e97a81b88d}" port="{9e60396a-719c-4a6d-99cc-c1a1ce084ccf}"/>
  </connection>
  <connection type="json" uuid="{50e29d4d-87df-4cb9-a5f2-e831b5431202}">
    <source node="{61ed2b37-bccd-4de8-9b8e-4c6c8848f7f3}" port="{bfb23e0f-3c05-42d2-87c7-4578dc383fa9}"/>
    <destination node="{4ea535c8-8e1a-4ab0-b71f-b76d7bdb0d9d}" port="{698c3a2b-53d2-4117-b47c-8ab95c6fc97d}"/>
  </connection>
  <connection type="json" uuid="{511ed6fc-a4f2-48db-824f-c3da65f40b1d}">
    <source node="{7621379e-3137-4f09-9dcb-49960392f45c}" port="{e966a90f-6f85-4e15-b75c-7402abab32b8}"/>
    <destination node="{7773f610-4fac-4be1-8bd1-a8d5a496c057}" port="{b3872043-45c9-4cc4-b82a-86393ff39cae}"/>
  </connection>
  <connection type="{json}" uuid="{7113ae64-0568-4e62-a404-aef1a0d5437f}">
    <source node="{7773f610-4fac-4be1-8bd1-a8d5a496c057}" port="{75650256-4230-4038-903f-0638d085be86}"/>
    <destination node="{61ed2b37-bccd-4de8-9b8e-4c6c8848f7f3}" port="{08c0b08f-0e3c-41e0-9005-b81f1ca2c3d8}"/>
  </connection>
  <connection type="(json, json)" uuid="{839564d1-b407-41e6-a214-1eb7748f2c0a}">
    <source node="{4ea535c8-8e1a-4ab0-b71f-b76d7bdb0d9d}" port="{e5adeaa5-536c-40a9-bd03-82fa600b8953}"/>
    <destination node="{4e18d700-bcf3-4759-910a-727145041ad1}" port="{598c60b1-439c-453b-a3b5-f4bf782a466d}"/>
  </connection>
  <connection type="json" uuid="{93da1acc-ce5d-4d69-be88-fd2de84ffbb6}">
    <source node="{2a5bc619-21d4-4471-b24b-decee7ed95b3}" port="{720150a0-9a4e-488c-ae04-7c5966663f2a}"/>
    <destination node="{bd388f53-8ad0-4a37-ae58-18cf98216b04}" port="{7b0d0c84-b46d-4c52-b3a7-b416c9213f3f}"/>
  </connection>
  <connection type="json" uuid="{a77746e0-39ed-4fe6-bbba-4894ae2294c6}">
    <source node="{2a5bc619-21d4-4471-b24b-decee7ed95b3}" port="{720150a0-9a4e-488c-ae04-7c5966663f2a}"/>
    <destination node="{c1e4edc0-af91-464f-ab46-40e97a81b88d}" port="{8e5de56e-e492-47c8-bdd1-346266066df9}"/>
  </connection>
  <connection type="[json]" uuid="{ccf5d15a-1ef3-4690-bb3f-9ea73e99d097}">
    <source node="{bd388f53-8ad0-4a37-ae58-18cf98216b04}" port="{72fcf17c-6cd7-4e2a-90f3-411791f914ff}"/>
    <destination node="{664e898c-cc65-4de3-ab2b-4d1c2e611737}" port="{61cdf83a-40e3-40fa-a1d2-9670945a6fc6}"/>
  </connection>
  <text color="Red" height="50.0" uuid="{d1e9c198-a78e-48a6-8440-83bf144e9104}" width="125.0" x="1225.0" y="1800.0">** json &lt;-&gt; {json} **</text>
  <text color="Red" height="56.0" uuid="{6f68ce62-673e-4897-a317-ef63d6a19063}" width="125.0" x="1225.0" y="1975.0">** json &lt;-&gt; [json] **</text>
</flow>
