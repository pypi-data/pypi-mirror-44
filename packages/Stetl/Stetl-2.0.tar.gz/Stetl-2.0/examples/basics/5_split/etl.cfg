# Transform input xml to GML and output to multiple GML files.
# This is a scenario one could use to split a very big XML file into smaller files.

# Do 2 chains, the second is just to see on stdout how things go
[etl]
chains = input_big_xml_file|xml_assembler|transformer_xslt|multi_output_file,
         input_big_xml_file|xml_assembler|transformer_xslt|output_std

# The source input file (assume N GB XML files here...)
# "file_path" may be a directory, comma-separated files etc
[input_big_xml_file]
class = stetl.inputs.fileinput.XmlElementStreamerFileInput
file_path = input
element_tags = city

# Assembles etree docs from GML elements
[xml_assembler]
class = stetl.filters.xmlassembler.XmlAssembler
max_elements = 2
container_doc = <?xml version='1.0' encoding='utf-8'?>
   <cities>
   </cities>
element_container_tag = cities

[transformer_xslt]
class = stetl.filters.xsltfilter.XsltFilter
script = cities2gml.xsl

[multi_output_file]
class = stetl.outputs.fileoutput.MultiFileOutput
file_path = output/gmlcities-%03d.gml

[output_std]
class = stetl.outputs.standardoutput.StandardXmlOutput
