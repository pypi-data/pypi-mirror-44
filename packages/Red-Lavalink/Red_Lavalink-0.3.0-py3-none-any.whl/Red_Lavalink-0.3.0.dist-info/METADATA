Metadata-Version: 2.1
Name: Red-Lavalink
Version: 0.3.0
Summary: Lavalink client library for Red-DiscordBot
Home-page: https://github.com/Cog-Creators/Red-Lavalink
Author: tekulvw
License: GPLv3
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: AsyncIO
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Multimedia :: Sound/Audio :: Players
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.5.3
Requires-Dist: websockets (<8.0,>=6.0)
Provides-Extra: docs
Requires-Dist: sphinx ; extra == 'docs'
Requires-Dist: sphinxcontrib-asyncio ; extra == 'docs'
Requires-Dist: sphinx-rtd-theme ; extra == 'docs'
Provides-Extra: tests
Requires-Dist: pytest (>3.0.6) ; extra == 'tests'
Requires-Dist: pytest-asyncio ; extra == 'tests'
Requires-Dist: async-generator ; extra == 'tests'

============
Red-Lavalink
============

.. image:: https://api.travis-ci.org/Cog-Creators/Red-Lavalink.svg?branch=develop
    :target: https://travis-ci.org/Cog-Creators/Red-Lavalink
    :alt: Travis CI status

.. image:: https://readthedocs.org/projects/red-lavalink/badge/?version=latest
    :target: http://red-lavalink.readthedocs.io/en/latest/?badge=latest
    :alt: Documentation Status

.. image:: https://img.shields.io/badge/code%20style-black-000000.svg
    :target: https://github.com/ambv/black
    :alt: Code style: black

A Lavalink client library written for Python 3.5 using the AsyncIO framework.
This library may be used for other projects as it contains no Red specific code or logic.

However, it is important to note that this library only supports projects using discord.py.

To install::

    pip install red-lavalink

*****
Usage
*****

.. code-block:: python

    import lavalink
    from discord.ext.commands import Bot

    bot = Bot()


    @bot.event
    async def on_ready():
        lavalink.initialize(
            bot, host='localhost', password='password',
            rest_port=2332, ws_port=2333
        )


    async def search_and_play(voice_channel, search_terms):
        player = await lavalink.connect(voice_channel)
        tracks = await player.search_yt(search_terms)
        player.add(tracks[0])
        await player.play()

When shutting down, be sure to do the following::

    await lavalink.close()


