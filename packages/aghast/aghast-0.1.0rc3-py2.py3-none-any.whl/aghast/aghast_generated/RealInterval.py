# automatically generated by the FlatBuffers compiler, do not modify

# namespace: aghast_generated

import flatbuffers

class RealInterval(object):
    __slots__ = ['_tab']

    # RealInterval
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RealInterval
    def Low(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # RealInterval
    def High(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # RealInterval
    def LowInclusive(self): return self._tab.Get(flatbuffers.number_types.BoolFlags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(16))
    # RealInterval
    def HighInclusive(self): return self._tab.Get(flatbuffers.number_types.BoolFlags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(17))

def CreateRealInterval(builder, low, high, lowInclusive, highInclusive):
    builder.Prep(8, 24)
    builder.Pad(6)
    builder.PrependBool(highInclusive)
    builder.PrependBool(lowInclusive)
    builder.PrependFloat64(high)
    builder.PrependFloat64(low)
    return builder.Offset()
