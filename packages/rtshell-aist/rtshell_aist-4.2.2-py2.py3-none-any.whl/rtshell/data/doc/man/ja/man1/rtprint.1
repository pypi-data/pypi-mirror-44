.\" Man page generated from reStructuredText.
.
.TH RTPRINT 1 "2015-08-13" "4.0" "User commands"
.SH NAME
rtprint \- ポートからのデータをターミナルに表示する
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH 書式
.sp
rtprint [options] <path1>:<port1> [<path2>:<port2>...]
.SH 概要
.sp
複数のアウトポートが送るデータを標準出力に表示します。
.sp
デフォルトは最初の値のみを表示します。複数の値を表示すことや定期的に表
示することも可能です。一回の実行ループで一つだけのポートにデータがあっ
た場合、一定の回数プリントする目的のためのプリントとしてカウントされま
す。
.sp
Pythonは表示できないデータを表示するためにフォーマッタ関数を使うことが
必要です。ユーザもこの関数を提供することは可能です。フォーマッタ関数は
一つの変数（表示するべきデータ）をもらいます:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
def rawpy(data):
    return data.__repr__()
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
ログツールから目的のポートまでの接続はデフォルトのプロパティで作られま
す。
.SH オプション
.INDENT 0.0
.TP
.BI \-m \ MODULES\fP,\fB \ \-\-mod\fB= MODULES
Import する必要がある Python モジュール。値が必要としているモジュー
ルが自動的にロードされていない場合、このオプションで指定してください。
モジュールとそのモジュールの \fB__POA\fP のモジュールも import します。
.TP
.BI \-n \ MAX\fP,\fB \ \-\-number\fB= MAX
読み込む回数の制限。
.TP
.BI \-p \ PATHS\fP,\fB \ \-\-path\fB= PATHS
モジュールのサーチパス。Pythonの \fBPYTHONPATH\fP 変数に追加する。
.TP
.BI \-r \ RATE\fP,\fB \ \-\-rate\fB= RATE
実行レート。
.TP
.BI \-t \ TIMEOUT\fP,\fB \ \-\-timeout\fB= TIMEOUT
読み込む時間の制限。このオプションを使う場合、 \fB\-\-number\fP を使うことは
できません。
.UNINDENT
.INDENT 0.0
.TP
.B \-\-version
プログラムのバージョン番号を表示して終了する
.TP
.B \-h\fP,\fB  \-\-help
ヘルプを表示して終了する
.TP
.B \-v\fP,\fB  \-\-verbose
冗長な情報を出力する [デフォルト： \fBFalse\fP]
.UNINDENT
.SH パス
.sp
\fBrtshell\fP は \fIパス\fP でRTCツリーのオブジェクトを示します。パスは
オブジェクトのアドレスです。ネームサーバとネームコンテクストは
ダイレクトリで、マネージャとRTコンポーネントはファイルです。POSIXの
\fBcat\fP 等のコマンドと同じように、コマンドに渡したパスはrtshellの
ワーキングディレクトリに追加されます。rtshellの現在のワーキングディレクトリは
\fBRTCSH_CWD\fP という環境変数に保存されて、 \fBrtcwd\fP というコマンドで
変更することができます。
.sp
利用できるパスはコマンド実行時のネームサーバによって変わります。
\fBRTCSH_NAMESERVERS\fP という環境変数の値に記録されたネームサーバとパスに
指定された ネームサーバを組み合わせて提供します。
.sp
例えば、 \fB/localhost/comp0.rtc\fP は \fBlocalhost\fP にあるネームサーバに登録
された \fBcomp0.rtc\fP というRTコンポーネントを示します。
\fB/localhost/manager/comp0.rtc\fP は \fBlocalhost\fP にあるネームサーバの下の
\fBmanager\fP というディレクトリに登録された \fBcomp0.rtc\fP というRT
コンポーネントを示します。 \fB\&./comp0.rtc\fP は現在のワーキングディレクトリ
の中にある \fBcomp0.rtc\fP というRTコンポーネントを示します。
.sp
RTコンポーネントのポートを示す場合、パスの後にコロン（「:」）で区切って
示します。例えば、 \fB/localhost/comp0.rtc:data\fP は
\fBcomp0.rtc\fP というRTコンポーネントの \fBdata\fP というポートを示します。
.sp
新しいポートを作るコマンドもあります。この場合、オプションをパスに追加
することができます。使えるオプションは作られるポートの名前とフォーマッタ
です。指定方法は以下の通りです:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
path:port.name#formatter
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
例:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
/localhost/blurg.host_cxt/comp0.rtc:input.stuff#a_printer
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
作られるポートの名前は \fBstuff\fP で、データは \fBa_printer\fP という関数で
ターミナルに表示するように指定してます。（ \fBa_printer\fP の関数はPythonが利
用可能な場所に存在する必要があります。普通はユーザがモジュールで提供します。）
作られたポートは \fBcomp0.rtc\fP の \fBinput\fP というポートに接続します。
.sp
「name」という部分は必須ではありません。書いていない場合は「.」文字も
書かないでください。例:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
/localhost/blurg.host_cxt/comp0.rtc:input#a_printer
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
「formatter」という部分は必須ではありません。書いていない場合は「.」文字も
書かないでください。例:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
/localhost/blurg.host_cxt/comp0.rtc:input.stuff
.ft P
.fi
.UNINDENT
.UNINDENT
.SH 環境変数
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B RTCTREE_ORB_ARGS
ORBを作る時に渡す変数です。セミコロンで区切ります。必須ではありません。
.TP
.B RTCTREE_NAMESERVERS
RTCツリーを作る時に参照するネームサーバのアドレスです。アドレスをセミ
コロンで区切ります。リストされたアドレスはすべてRTCツリーに追加して
rtshellで見ることができるようになります。必須ではありません。
.TP
.B RTSH_CWD
rtshellの現在のワーキングディレクトリ。rtshellが自動的に設定します。
設定しないでください。
.UNINDENT
.UNINDENT
.UNINDENT
.sp
普通、ユーザが設定する変数は \fBRTCTREE_NAMESERVERS\fP のみです。よく使うネ
ームサーバを設定しておくと便利です。例えば、Bashシェルの場合、以下のコマンド
は \fBlocalhost\fP 、 \fB192.168.0.1:65346\fP および \fBexample.com\fP にあるネーム
サーバをいつもrtshellで利用できるようにします。
.INDENT 0.0
.INDENT 3.5
$ export RTCTREE_NAMESERVERS=localhost;192.168.0.1:65346;example.com
.UNINDENT
.UNINDENT
.SH 返り値
.sp
成功の場合はゼロを返します。失敗の場合はゼロではない値を返します。
.sp
デバグ情報とエラーは \fBstderr\fP に出します。
.SH 例
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ rtprint /localhost/ConsoleIn0.rtc:out
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBConsoleIn0.rtc\fP の \fBout\fP ポートから最初の値を表示します。
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ rtprint /localhost/ConsoleIn0.rtc:out \-n 5
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBConsoleIn0.rtc\fP の \fBout\fP ポートから最初の5個の値を表示します。
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ rtprint /localhost/ConsoleIn0.rtc:out \-t 5
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBConsoleIn0.rtc\fP の \fBout\fP ポートからの値を5秒間表示します。
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ rtprint /localhost/ConsoleIn0.rtc:out \-t 5 \-r 10
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBConsoleIn0.rtc\fP の \fBout\fP ポートからの値を5秒間、1秒で10回表示しま
す。
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ rtprint /localhost/ConsoleIn0.rtc:out#printers.my_formatter
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBConsoleIn0.rtc\fP の \fBout\fP ポートの最初の値を \fBprinters\fP モジュールの
\fBmy_formatter\fP 関数に送って結果を表示します。
.sp
\fB\-\-mod\fP と \fB\-\-path\fP の例はrtinject(1)を参照してください。
.SH 参照
.INDENT 0.0
.INDENT 3.5
\fBrtcat\fP (1),
\fBrtinject\fP (1),
\fBrtlog\fP (1)
.UNINDENT
.UNINDENT
.SH AUTHOR
Geoffrey Biggs and contributors
.SH COPYRIGHT
LGPL3
.\" Generated by docutils manpage writer.
.
