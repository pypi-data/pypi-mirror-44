.\" Man page generated from reStructuredText.
.
.TH RTSTART 1 "2015-08-13" "4.0" "User commands"
.SH NAME
rtstart \- start an RT-System
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
rtstart [options] [RTSProfile file]
.SH DESCRIPTION
.sp
Start an RT\-System, activating all involved components, using an
RTSProfile.  Components are activated in the order specified in the
RTSProfile. Any components not marked as \fBrequired\fP in the RTSProfile
will be ignored if they are not running.
.sp
If no file is given, the RTSProfile is read from standard input.
.sp
XML format is used by default; to use RTSProfiles specified in YAML,
specify \fB\-\-yaml\fP\&.
.SH OPTIONS
.INDENT 0.0
.TP
.B \-\-dry\-run
Print what will be done but don\(aqt actually do anything.
.TP
.B \-x\fP,\fB  \-\-xml
Use XML input format.
.TP
.B \-y\fP,\fB  \-\-yaml
Use YAML input format.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-version
Show program\(aqs version number and exit
.TP
.B \-h\fP,\fB  \-\-help
Show a help message and exit
.TP
.B \-v\fP,\fB  \-\-verbose
Output verbose information. [Default: \fBFalse\fP]
.UNINDENT
.SH START PLANS
.sp
The RTSProfile describing an RT\-System can also specify the ordering of
starting and stopping components of that system. It is possible to
change the order in which components are started and stopped and
specify dependencies between components, for example to ensure one
component will not start before another that it requires has started.
.sp
\fBrtstart(1)\fP and \fBrtstop(1)\fP use this information when they start
and stop systems. \fBrtstart\fP uses the information contained in an
\fBActivation\fP block. \fBrtstop\fP uses the information contained in a
\fBDeactivation\fP block. When executed, they will build and execute a
plan for changing the state of the entire system. They will not exit
until the plan completes or an error occurs.
.sp
When displayed using the \fB\-\-dry\-run\fP or \fB\-\-verbose\fP options, the
plan looks similar to that shown below:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{1} Activate /localhost/ConfigSample0.rtc in execution context 0
(Required)
{2} [Order 1] Activate /localhost/Motor0.rtc in execution context 0
(Required)
{4} [Order 3/Wait 5000ms] Activate /localhost/Controller0.rtc in
execution context 0 (Required)
{3} [Order 2/Sync to Motor0, Order 5/Sync to Controller0] Activate
/localhost/Sensor0.rtc in execution context 0 (Required)
{5} [Order 4/After ConfigSample0\(aqs action] Activate
/localhost/ConsoleIn0.rtc in execution context 0 (Required)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The number in braces at the beginning of each line is the \fIaction ID\fP\&.
These are also displayed during execution and allow easy identification
of individual actions.
.sp
Following this there may be a value in square brackets. This indicates
any \fIpre\-conditions\fP on the action being executed:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B Order
pre\-conditions are simple sequencing. When no other conditions are
present, actions will be executed in order of their sequence number.
.TP
.B Wait
pre\-conditions indicate that the specified time must pass before the
action will be executed.
.TP
.B Sync
pre\-conditions prevent the action executing until the specified
component has reached the target state. A timeout can be set on this
occurring, to account for errors.
.TP
.B After
pre\-conditions are similar to \fBSync\fP pre\-conditions. The
difference is that they wait for the specified action to be
performed on the other component first; in other words, the action
will be executed after the other component\(aqs action, but before
confirmation that it has reached the target state.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
The remainder of the line is a description of the action to perform.
.SH PATHS
.sp
\fBrtshell\fP uses \fIpaths\fP to indicate objects in the RTC Tree. A path is
the address of object. Name servers and naming contexts on name servers
are considered directories. Managers and RT\-Components are considered
\(aqfiles\(aq. As with the POSIX \fBcat\fP command, the path specified as an
argument to commands is appended to the current rtshell working
directory, which is stored in the \fBRTCSH_CWD\fP environment variable and
changeable using the \fBrtcwd\fP command.
.sp
The available paths depend on the known name servers at the time the
command is executed. This is a combination of the servers listed in the
\fBRTCSH_NAMESERVERS\fP environment variable and the servers used in given
paths.
.sp
For example, \fB/localhost/comp0.rtc\fP refers to the component named
\fBcomp0.rtc\fP registered on the name server at \fBlocalhost\fP\&.
\fB/localhost/manager/comp0.rtc\fP refers to the component \fBcomp0.rtc\fP
in the directory \fBmanager\fP on the \fBlocalhost\fP name server.
\fB\&./comp0.rtc\fP refers to that component in the current directory.
.sp
When specifying a port on an RT\-Component, it should be placed after the
path, separated by a colon. For example, \fB/localhost/comp0.rtc:data\fP
refers to the port \fBdata\fP on the component \fBcomp0.rtc\fP\&.
.sp
Some commands that create new ports accept extra options in the paths,
such as a name for the automatically generated port, or a formatter. The
format for specifying these paths is:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
path:port.name#formatter
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
/localhost/blurg.host_cxt/comp0.rtc:input.stuff#a_printer
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This specifies that the automatically generated port should be named
\fBstuff\fP, and the data type it handles should be printed using the
\fBa_printer\fP function (which must be available, usually it is provided
by the user in a loadable module). The port will be connected to the
\fBinput\fP port of the \fBcomp0.rtc\fP component.
.sp
The name component is optional. If it is not present, neither
should the \fB\&.\fP character be. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
/localhost/blurg.host_cxt/comp0.rtc:input#a_printer
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The formatter component is optional. If it is not present, neither
should the \fB#\fP character be. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
/localhost/blurg.host_cxt/comp0.rtc:input.stuff
.ft P
.fi
.UNINDENT
.UNINDENT
.SH ENVIRONMENT
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B RTCTREE_ORB_ARGS
A list of arguments, separated by semi\-colons, to pass to the ORB
when creating it. Optional.
.TP
.B RTCTREE_NAMESERVERS
A list of name server addresses, separated by semi\-colons, to parse
when creating the RTCTree. Each server in the list will be added to
the tree, making it available for browsing with rtshell.  Optional.
.TP
.B RTSH_CWD
The current working directory in the tree. Do not set this variable;
it is set automatically by rtshell.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
The only variable that should normally be set by the user is
\fBRTCTREE_NAMESERVERS\fP\&. Set this to a list of name server addresses,
separated by semi\-colons, that rtshell should interact with. For
example, in a Bash shell, the following command will set the known name
serves to \fBlocalhost\fP, \fB192.168.0.1:65346\fP and \fBexample.com\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ export RTCTREE_NAMESERVERS=localhost;192.168.0.1:65346;example.com
.ft P
.fi
.UNINDENT
.UNINDENT
.SH DIAGNOSTICS
.sp
Returns \fBzero\fP on success and \fBnon\-zero\fP on failure.
.sp
Verbose output and error messages are printed to \fBstderr\fP\&.
.SH EXAMPLES
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ rtstart sys.rtsys
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Start the RT\-System specified in the file \fBsys.rtsys\fP\&.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ rtstart sys.rtsys \-\-dry\-run
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Display the actions that will be performed to start the system.
.SH SEE ALSO
.INDENT 0.0
.INDENT 3.5
\fBrtcheck\fP (1),
\fBrtresurrect\fP (1),
\fBrtstop\fP (1)
.UNINDENT
.UNINDENT
.SH AUTHOR
Geoffrey Biggs and contributors
.SH COPYRIGHT
LGPL3
.\" Generated by docutils manpage writer.
.
