
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftBWORleftBWXORleftBWANDrightQMARKCOLONnonassocEQNEEQ_REMEQ_RESNE_REMNE_RESGEGTLELTleftADDSUBleftBWLSHBWRSHleftMULTDIVFDIVMODleftPOWrightUMINUSADD AND BWAND BWLSH BWOR BWRSH BWXOR COLON DATETIME EQ EQ_REM EQ_RES FALSE FDIV FLOAT FLOAT_INF FLOAT_NAN GE GT LE LPAREN LT MOD MUL NE NE_REM NE_RES NOT OR POW QMARK RPAREN STRING SUB SYMBOL TDIV TRUEstatement : expression\n\t\texpression : expression QMARK expression COLON expression\n\t\t\n\t\texpression : expression ADD    expression\n\t\t\t\t   | expression SUB    expression\n\t\t\t\t   | expression MOD    expression\n\t\t\t\t   | expression MUL    expression\n\t\t\t\t   | expression FDIV   expression\n\t\t\t\t   | expression TDIV   expression\n\t\t\t\t   | expression POW    expression\n\t\t\n\t\texpression : expression BWAND  expression\n\t\t\t\t   | expression BWOR   expression\n\t\t\t\t   | expression BWXOR  expression\n\t\t\t\t   | expression BWLSH  expression\n\t\t\t\t   | expression BWRSH  expression\n\t\t\n\t\texpression : expression EQ     expression\n\t\t\t\t   | expression NE     expression\n\t\t\n\t\texpression : expression GT     expression\n\t\t\t\t   | expression GE     expression\n\t\t\t\t   | expression LT     expression\n\t\t\t\t   | expression LE     expression\n\t\t\n\t\texpression : expression EQ_REM expression\n\t\t\t\t   | expression EQ_RES expression\n\t\t\t\t   | expression NE_REM expression\n\t\t\t\t   | expression NE_RES expression\n\t\t\n\t\texpression : expression AND    expression\n\t\t\t\t   | expression OR     expression\n\t\texpression : LPAREN expression RPARENexpression : NOT expressionexpression : SYMBOLexpression : SUB expression %prec UMINUS\n\t\texpression : TRUE\n\t\t\t\t   | FALSE\n\t\texpression : DATETIMEexpression : FLOATexpression : FLOAT_NANexpression : FLOAT_INFexpression : STRING'
    
_lr_action_items = {'LPAREN':([0,3,4,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,68,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NOT':([0,3,4,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,68,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'SYMBOL':([0,3,4,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,68,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'SUB':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,],[3,16,3,3,3,-29,-31,-32,-33,-34,-35,-36,-37,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-30,16,16,16,-3,-4,-5,-6,-7,-8,-9,16,16,16,-13,-14,16,16,16,16,16,16,16,16,16,16,16,16,-27,3,16,]),'TRUE':([0,3,4,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,68,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'FALSE':([0,3,4,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,68,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'DATETIME':([0,3,4,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,68,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'FLOAT':([0,3,4,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,68,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'FLOAT_NAN':([0,3,4,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,68,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FLOAT_INF':([0,3,4,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,68,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'STRING':([0,3,4,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,68,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'$end':([1,2,6,7,8,9,10,11,12,13,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[0,-1,-29,-31,-32,-33,-34,-35,-36,-37,-30,-28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-2,]),'QMARK':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[14,-29,-31,-32,-33,-34,-35,-36,-37,-30,14,14,14,-3,-4,-5,-6,-7,-8,-9,14,14,14,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,14,14,-27,14,]),'ADD':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[15,-29,-31,-32,-33,-34,-35,-36,-37,-30,15,15,15,-3,-4,-5,-6,-7,-8,-9,15,15,15,-13,-14,15,15,15,15,15,15,15,15,15,15,15,15,-27,15,]),'MOD':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[17,-29,-31,-32,-33,-34,-35,-36,-37,-30,17,17,17,17,17,-5,-6,-7,-8,-9,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-27,17,]),'MUL':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[18,-29,-31,-32,-33,-34,-35,-36,-37,-30,18,18,18,18,18,-5,-6,-7,-8,-9,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-27,18,]),'FDIV':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[19,-29,-31,-32,-33,-34,-35,-36,-37,-30,19,19,19,19,19,-5,-6,-7,-8,-9,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-27,19,]),'TDIV':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[20,-29,-31,-32,-33,-34,-35,-36,-37,-30,20,20,20,20,20,-5,-6,-7,-8,-9,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-27,20,]),'POW':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[21,-29,-31,-32,-33,-34,-35,-36,-37,-30,21,21,21,21,21,21,21,21,21,-9,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-27,21,]),'BWAND':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[22,-29,-31,-32,-33,-34,-35,-36,-37,-30,22,22,22,-3,-4,-5,-6,-7,-8,-9,-10,22,22,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,22,22,-27,-2,]),'BWOR':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[23,-29,-31,-32,-33,-34,-35,-36,-37,-30,23,23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,23,23,-27,-2,]),'BWXOR':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[24,-29,-31,-32,-33,-34,-35,-36,-37,-30,24,24,24,-3,-4,-5,-6,-7,-8,-9,-10,24,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,24,24,-27,-2,]),'BWLSH':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[25,-29,-31,-32,-33,-34,-35,-36,-37,-30,25,25,25,25,25,-5,-6,-7,-8,-9,25,25,25,-13,-14,25,25,25,25,25,25,25,25,25,25,25,25,-27,25,]),'BWRSH':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[26,-29,-31,-32,-33,-34,-35,-36,-37,-30,26,26,26,26,26,-5,-6,-7,-8,-9,26,26,26,-13,-14,26,26,26,26,26,26,26,26,26,26,26,26,-27,26,]),'EQ':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[27,-29,-31,-32,-33,-34,-35,-36,-37,-30,27,27,27,-3,-4,-5,-6,-7,-8,-9,27,27,27,-13,-14,None,None,None,None,None,None,None,None,None,None,27,27,-27,27,]),'NE':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[28,-29,-31,-32,-33,-34,-35,-36,-37,-30,28,28,28,-3,-4,-5,-6,-7,-8,-9,28,28,28,-13,-14,None,None,None,None,None,None,None,None,None,None,28,28,-27,28,]),'GT':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[29,-29,-31,-32,-33,-34,-35,-36,-37,-30,29,29,29,-3,-4,-5,-6,-7,-8,-9,29,29,29,-13,-14,None,None,None,None,None,None,None,None,None,None,29,29,-27,29,]),'GE':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[30,-29,-31,-32,-33,-34,-35,-36,-37,-30,30,30,30,-3,-4,-5,-6,-7,-8,-9,30,30,30,-13,-14,None,None,None,None,None,None,None,None,None,None,30,30,-27,30,]),'LT':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[31,-29,-31,-32,-33,-34,-35,-36,-37,-30,31,31,31,-3,-4,-5,-6,-7,-8,-9,31,31,31,-13,-14,None,None,None,None,None,None,None,None,None,None,31,31,-27,31,]),'LE':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[32,-29,-31,-32,-33,-34,-35,-36,-37,-30,32,32,32,-3,-4,-5,-6,-7,-8,-9,32,32,32,-13,-14,None,None,None,None,None,None,None,None,None,None,32,32,-27,32,]),'EQ_REM':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[33,-29,-31,-32,-33,-34,-35,-36,-37,-30,33,33,33,-3,-4,-5,-6,-7,-8,-9,33,33,33,-13,-14,None,None,None,None,None,None,None,None,None,None,33,33,-27,33,]),'EQ_RES':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[34,-29,-31,-32,-33,-34,-35,-36,-37,-30,34,34,34,-3,-4,-5,-6,-7,-8,-9,34,34,34,-13,-14,None,None,None,None,None,None,None,None,None,None,34,34,-27,34,]),'NE_REM':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[35,-29,-31,-32,-33,-34,-35,-36,-37,-30,35,35,35,-3,-4,-5,-6,-7,-8,-9,35,35,35,-13,-14,None,None,None,None,None,None,None,None,None,None,35,35,-27,35,]),'NE_RES':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[36,-29,-31,-32,-33,-34,-35,-36,-37,-30,36,36,36,-3,-4,-5,-6,-7,-8,-9,36,36,36,-13,-14,None,None,None,None,None,None,None,None,None,None,36,36,-27,36,]),'AND':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[37,-29,-31,-32,-33,-34,-35,-36,-37,-30,37,-28,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,37,-27,-2,]),'OR':([2,6,7,8,9,10,11,12,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[38,-29,-31,-32,-33,-34,-35,-36,-37,-30,38,-28,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-2,]),'RPAREN':([6,7,8,9,10,11,12,13,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[-29,-31,-32,-33,-34,-35,-36,-37,-30,67,-28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-2,]),'COLON':([6,7,8,9,10,11,12,13,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,],[-29,-31,-32,-33,-34,-35,-36,-37,-30,-28,68,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,3,4,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,68,],[2,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','parser.py',228),
  ('expression -> expression QMARK expression COLON expression','expression',5,'p_expression_ternary','parser.py',233),
  ('expression -> expression ADD expression','expression',3,'p_expression_arithmetic','parser.py',240),
  ('expression -> expression SUB expression','expression',3,'p_expression_arithmetic','parser.py',241),
  ('expression -> expression MOD expression','expression',3,'p_expression_arithmetic','parser.py',242),
  ('expression -> expression MUL expression','expression',3,'p_expression_arithmetic','parser.py',243),
  ('expression -> expression FDIV expression','expression',3,'p_expression_arithmetic','parser.py',244),
  ('expression -> expression TDIV expression','expression',3,'p_expression_arithmetic','parser.py',245),
  ('expression -> expression POW expression','expression',3,'p_expression_arithmetic','parser.py',246),
  ('expression -> expression BWAND expression','expression',3,'p_expression_bitwise','parser.py',254),
  ('expression -> expression BWOR expression','expression',3,'p_expression_bitwise','parser.py',255),
  ('expression -> expression BWXOR expression','expression',3,'p_expression_bitwise','parser.py',256),
  ('expression -> expression BWLSH expression','expression',3,'p_expression_bitwise','parser.py',257),
  ('expression -> expression BWRSH expression','expression',3,'p_expression_bitwise','parser.py',258),
  ('expression -> expression EQ expression','expression',3,'p_expression_comparison','parser.py',266),
  ('expression -> expression NE expression','expression',3,'p_expression_comparison','parser.py',267),
  ('expression -> expression GT expression','expression',3,'p_expression_arithmetic_comparison','parser.py',275),
  ('expression -> expression GE expression','expression',3,'p_expression_arithmetic_comparison','parser.py',276),
  ('expression -> expression LT expression','expression',3,'p_expression_arithmetic_comparison','parser.py',277),
  ('expression -> expression LE expression','expression',3,'p_expression_arithmetic_comparison','parser.py',278),
  ('expression -> expression EQ_REM expression','expression',3,'p_expression_regex_comparison','parser.py',286),
  ('expression -> expression EQ_RES expression','expression',3,'p_expression_regex_comparison','parser.py',287),
  ('expression -> expression NE_REM expression','expression',3,'p_expression_regex_comparison','parser.py',288),
  ('expression -> expression NE_RES expression','expression',3,'p_expression_regex_comparison','parser.py',289),
  ('expression -> expression AND expression','expression',3,'p_expression_logic','parser.py',297),
  ('expression -> expression OR expression','expression',3,'p_expression_logic','parser.py',298),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',305),
  ('expression -> NOT expression','expression',2,'p_expression_negate','parser.py',309),
  ('expression -> SYMBOL','expression',1,'p_expression_symbol','parser.py',313),
  ('expression -> SUB expression','expression',2,'p_expression_uminus','parser.py',318),
  ('expression -> TRUE','expression',1,'p_expression_boolean','parser.py',325),
  ('expression -> FALSE','expression',1,'p_expression_boolean','parser.py',326),
  ('expression -> DATETIME','expression',1,'p_expression_datetime','parser.py',331),
  ('expression -> FLOAT','expression',1,'p_expression_float','parser.py',335),
  ('expression -> FLOAT_NAN','expression',1,'p_expression_float_nan','parser.py',339),
  ('expression -> FLOAT_INF','expression',1,'p_expression_float_inf','parser.py',343),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',347),
]
