Metadata-Version: 2.1
Name: gissue
Version: 0.3
Summary: Command line tool for managing GitHub project issues.
Home-page: http://github.com/sam-lane/gissue
Author: Sam Lane
Author-email: gissue@samlane.io
License: MIT
Platform: UNKNOWN
Requires-Dist: Requests (==2.21.0)
Requires-Dist: Colr (==0.8.3)


Gissue
======


.. image:: https://travis-ci.org/Sam-Lane/Gissue.svg?branch=master
   :target: https://travis-ci.org/Sam-Lane/Gissue
   :alt: Build Status


.. image:: https://img.shields.io/github/issues-raw/Sam-Lane/Gissue.svg
   :target: 
   :alt: issues


üêô Github issue manager in the command line

Installing
----------

clone the repository
""""""""""""""""""""

.. code-block:: bash

   $ git clone https://github.com/Sam-Lane/Gissue.git

install dependencies
""""""""""""""""""""

.. code-block:: bash

   $ pip install -r requirements.txt

link gissue.py to /usr/local/bin
""""""""""""""""""""""""""""""""

.. code-block:: bash

   $ ln -s $PWD/gissue/gissue.py /usr/local/bin/gissue

Using Gissue
------------

Authenticating With Github.
^^^^^^^^^^^^^^^^^^^^^^^^^^^

Before you can use gissue you need to authenticate with GitHub. Gissue uses Githubs personal access tokens to authenticate and it is super simple to get a token. Simply run:

.. code-block:: bash

   $ gissue --generate-token

You will then be prompted for your Github username & password.

If your account is secured with oauth this will not work. You will need to go to Github and generate a token in your user settings. Once you have your token run:

.. code-block:: bash

   $ gissue --update-token <your token from github here>

You should now be authenticated with the Github servers.

Getting Issues.
^^^^^^^^^^^^^^^

Inside a directory with a .git folder
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When running gissue inside a directory with a ``.git`` directory it will retrieve all issues on the project you are inside.

.. code-block:: bash

   $ gissue

   (2)üêõ bug - Error when not conected to internet

   (1)üíâ enhancement - Feature to add issue from cli

Inside a directory without a .git folder
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When running gissue in a directory that does not contain a ``.git`` directory it will retrieve all issues assigned to **\ *you*\ ** on Github.

Adding issues
^^^^^^^^^^^^^

Creating an issue is easy

.. code-block:: bash

   $ gissue add
   title your issue
   > my new issue


* 
  gissue will now open your editor defined in the users env variables or default to nano.

* 
  Here you can write the body of your issue. Lines starting with # are ignored. Or leave it blank.

* 
  Save and quit from the editor and your new issue will be posted to github.

.. code-block:: bash

   my new issue has been created

Adding issues with labels
^^^^^^^^^^^^^^^^^^^^^^^^^

You can add issues with one or more labels with the optional ``--label`` argument.

.. code-block:: bash

   $ gissue add --label bug

You can specify one or more labels from the following labels
[bug, duplicate, enhancement, good first issue, help wanted, invalid, question, hotfix]

Show the issues in the git repostitory
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

You can retrieve and print out all the issues in the current repo

.. code-block:: bash

   $ gissue show

Additional Show arguments
~~~~~~~~~~~~~~~~~~~~~~~~~

There are optional arguments which can be written after the ``show`` command

.. code-block:: bash

   $ gissue show --number [number]

Retrieves and gets the issue with number/id 1 in the repostitory.

.. code-block:: bash

   $ gissue show --state [open, closed, all]

Displays issues with the defined state.

Todo:
-----


* [ ] Add testing suite
* [ ] Add labels to new issue
* [ ] Add comment to existing label
* [ ] Close an issue
* [ ] Open an issue to github website

Contributors:
-------------


* `Erik Lange <https://github.com/eriklange>`_


