# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow_federated/proto/v0/computation.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from tensorflow.core.framework import graph_pb2 as tensorflow_dot_core_dot_framework_dot_graph__pb2
from tensorflow.core.framework import tensor_shape_pb2 as tensorflow_dot_core_dot_framework_dot_tensor__shape__pb2
from tensorflow.core.framework import types_pb2 as tensorflow_dot_core_dot_framework_dot_types__pb2
from tensorflow.core.protobuf import meta_graph_pb2 as tensorflow_dot_core_dot_protobuf_dot_meta__graph__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='tensorflow_federated/proto/v0/computation.proto',
  package='tensorflow_federated.v0',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n/tensorflow_federated/proto/v0/computation.proto\x12\x17tensorflow_federated.v0\x1a%tensorflow/core/framework/graph.proto\x1a,tensorflow/core/framework/tensor_shape.proto\x1a%tensorflow/core/framework/types.proto\x1a)tensorflow/core/protobuf/meta_graph.proto\"\xdb\x04\n\x0b\x43omputation\x12+\n\x04type\x18\x01 \x01(\x0b\x32\x1d.tensorflow_federated.v0.Type\x12\x39\n\ntensorflow\x18\x02 \x01(\x0b\x32#.tensorflow_federated.v0.TensorFlowH\x00\x12\x37\n\tintrinsic\x18\x03 \x01(\x0b\x32\".tensorflow_federated.v0.IntrinsicH\x00\x12-\n\x04\x64\x61ta\x18\n \x01(\x0b\x32\x1d.tensorflow_federated.v0.DataH\x00\x12\x31\n\x06lambda\x18\x04 \x01(\x0b\x32\x1f.tensorflow_federated.v0.LambdaH\x00\x12/\n\x05\x62lock\x18\x05 \x01(\x0b\x32\x1e.tensorflow_federated.v0.BlockH\x00\x12\x37\n\treference\x18\x06 \x01(\x0b\x32\".tensorflow_federated.v0.ReferenceH\x00\x12-\n\x04\x63\x61ll\x18\x07 \x01(\x0b\x32\x1d.tensorflow_federated.v0.CallH\x00\x12/\n\x05tuple\x18\x08 \x01(\x0b\x32\x1e.tensorflow_federated.v0.TupleH\x00\x12\x37\n\tselection\x18\t \x01(\x0b\x32\".tensorflow_federated.v0.SelectionH\x00\x12\x37\n\tplacement\x18\x0b \x01(\x0b\x32\".tensorflow_federated.v0.PlacementH\x00\x42\r\n\x0b\x63omputation\"\xaa\x03\n\x04Type\x12\x39\n\x08\x66unction\x18\x01 \x01(\x0b\x32%.tensorflow_federated.v0.FunctionTypeH\x00\x12\x38\n\x05tuple\x18\x02 \x01(\x0b\x32\'.tensorflow_federated.v0.NamedTupleTypeH\x00\x12\x39\n\x08sequence\x18\x03 \x01(\x0b\x32%.tensorflow_federated.v0.SequenceTypeH\x00\x12\x35\n\x06tensor\x18\x04 \x01(\x0b\x32#.tensorflow_federated.v0.TensorTypeH\x00\x12\x39\n\x08\x61\x62stract\x18\x05 \x01(\x0b\x32%.tensorflow_federated.v0.AbstractTypeH\x00\x12;\n\tplacement\x18\x06 \x01(\x0b\x32&.tensorflow_federated.v0.PlacementTypeH\x00\x12;\n\tfederated\x18\x07 \x01(\x0b\x32&.tensorflow_federated.v0.FederatedTypeH\x00\x42\x06\n\x04type\"o\n\x0c\x46unctionType\x12\x30\n\tparameter\x18\x01 \x01(\x0b\x32\x1d.tensorflow_federated.v0.Type\x12-\n\x06result\x18\x02 \x01(\x0b\x32\x1d.tensorflow_federated.v0.Type\"\x99\x01\n\x0eNamedTupleType\x12@\n\x07\x65lement\x18\x01 \x03(\x0b\x32/.tensorflow_federated.v0.NamedTupleType.Element\x1a\x45\n\x07\x45lement\x12\x0c\n\x04name\x18\x01 \x01(\t\x12,\n\x05value\x18\x02 \x01(\x0b\x32\x1d.tensorflow_federated.v0.Type\">\n\x0cSequenceType\x12.\n\x07\x65lement\x18\x01 \x01(\x0b\x32\x1d.tensorflow_federated.v0.Type\"^\n\nTensorType\x12#\n\x05\x64type\x18\x01 \x01(\x0e\x32\x14.tensorflow.DataType\x12+\n\x05shape\x18\x02 \x01(\x0b\x32\x1c.tensorflow.TensorShapeProto\"\x1d\n\x0c\x41\x62stractType\x12\r\n\x05label\x18\x01 \x01(\t\"\x8b\x01\n\rPlacementSpec\x12\x38\n\x05label\x18\x01 \x01(\x0b\x32\'.tensorflow_federated.v0.PlacementLabelH\x00\x12\x33\n\x05value\x18\x02 \x01(\x0b\x32\".tensorflow_federated.v0.PlacementH\x00\x42\x0b\n\tplacement\"\x1f\n\x0ePlacementLabel\x12\r\n\x05label\x18\x01 \x01(\t\"\x18\n\tPlacement\x12\x0b\n\x03uri\x18\x01 \x01(\t\"\x8c\x01\n\rFederatedType\x12\x39\n\tplacement\x18\x01 \x01(\x0b\x32&.tensorflow_federated.v0.PlacementSpec\x12\x11\n\tall_equal\x18\x02 \x01(\x08\x12-\n\x06member\x18\x03 \x01(\x0b\x32\x1d.tensorflow_federated.v0.Type\"P\n\rPlacementType\x12?\n\x0einstance_label\x18\x01 \x01(\x0b\x32\'.tensorflow_federated.v0.PlacementLabel\"\x81\x05\n\nTensorFlow\x12\'\n\tgraph_def\x18\x01 \x01(\x0b\x32\x14.tensorflow.GraphDef\x12\x15\n\rinitialize_op\x18\x04 \x01(\t\x12>\n\tparameter\x18\x02 \x01(\x0b\x32+.tensorflow_federated.v0.TensorFlow.Binding\x12;\n\x06result\x18\x03 \x01(\x0b\x32+.tensorflow_federated.v0.TensorFlow.Binding\x1a\xea\x01\n\x07\x42inding\x12\x46\n\x05tuple\x18\x01 \x01(\x0b\x32\x35.tensorflow_federated.v0.TensorFlow.NamedTupleBindingH\x00\x12\x43\n\x06tensor\x18\x02 \x01(\x0b\x32\x31.tensorflow_federated.v0.TensorFlow.TensorBindingH\x00\x12G\n\x08sequence\x18\x03 \x01(\x0b\x32\x33.tensorflow_federated.v0.TensorFlow.SequenceBindingH\x00\x42\t\n\x07\x62inding\x1aQ\n\x11NamedTupleBinding\x12<\n\x07\x65lement\x18\x01 \x03(\x0b\x32+.tensorflow_federated.v0.TensorFlow.Binding\x1a\x31\n\rTensorBinding\x12\x15\n\x0btensor_name\x18\x01 \x01(\tH\x00\x42\t\n\x07\x62inding\x1a\x43\n\x0fSequenceBinding\x12%\n\x1biterator_string_handle_name\x18\x01 \x01(\tH\x00\x42\t\n\x07\x62inding\"\x18\n\tIntrinsic\x12\x0b\n\x03uri\x18\x01 \x01(\t\"V\n\x06Lambda\x12\x16\n\x0eparameter_name\x18\x01 \x01(\t\x12\x34\n\x06result\x18\x02 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\"\xbe\x01\n\x05\x42lock\x12\x33\n\x05local\x18\x01 \x03(\x0b\x32$.tensorflow_federated.v0.Block.Local\x12\x34\n\x06result\x18\x02 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\x1aJ\n\x05Local\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x33\n\x05value\x18\x02 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\"\x19\n\tReference\x12\x0c\n\x04name\x18\x01 \x01(\t\"v\n\x04\x43\x61ll\x12\x36\n\x08\x66unction\x18\x01 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\x12\x36\n\x08\x61rgument\x18\x02 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\"\x8e\x01\n\x05Tuple\x12\x37\n\x07\x65lement\x18\x01 \x03(\x0b\x32&.tensorflow_federated.v0.Tuple.Element\x1aL\n\x07\x45lement\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x33\n\x05value\x18\x02 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\"o\n\tSelection\x12\x34\n\x06source\x18\x01 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\x12\x0e\n\x04name\x18\x02 \x01(\tH\x00\x12\x0f\n\x05index\x18\x03 \x01(\x05H\x00\x42\x0b\n\tselection\"\x1d\n\x04\x44\x61ta\x12\r\n\x03uri\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x64\x61tab\x06proto3')
  ,
  dependencies=[tensorflow_dot_core_dot_framework_dot_graph__pb2.DESCRIPTOR,tensorflow_dot_core_dot_framework_dot_tensor__shape__pb2.DESCRIPTOR,tensorflow_dot_core_dot_framework_dot_types__pb2.DESCRIPTOR,tensorflow_dot_core_dot_protobuf_dot_meta__graph__pb2.DESCRIPTOR,])




_COMPUTATION = _descriptor.Descriptor(
  name='Computation',
  full_name='tensorflow_federated.v0.Computation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='tensorflow_federated.v0.Computation.type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tensorflow', full_name='tensorflow_federated.v0.Computation.tensorflow', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='intrinsic', full_name='tensorflow_federated.v0.Computation.intrinsic', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='tensorflow_federated.v0.Computation.data', index=3,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lambda', full_name='tensorflow_federated.v0.Computation.lambda', index=4,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='block', full_name='tensorflow_federated.v0.Computation.block', index=5,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reference', full_name='tensorflow_federated.v0.Computation.reference', index=6,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='call', full_name='tensorflow_federated.v0.Computation.call', index=7,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tuple', full_name='tensorflow_federated.v0.Computation.tuple', index=8,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='selection', full_name='tensorflow_federated.v0.Computation.selection', index=9,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='placement', full_name='tensorflow_federated.v0.Computation.placement', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='computation', full_name='tensorflow_federated.v0.Computation.computation',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=244,
  serialized_end=847,
)


_TYPE = _descriptor.Descriptor(
  name='Type',
  full_name='tensorflow_federated.v0.Type',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='function', full_name='tensorflow_federated.v0.Type.function', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tuple', full_name='tensorflow_federated.v0.Type.tuple', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sequence', full_name='tensorflow_federated.v0.Type.sequence', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tensor', full_name='tensorflow_federated.v0.Type.tensor', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='abstract', full_name='tensorflow_federated.v0.Type.abstract', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='placement', full_name='tensorflow_federated.v0.Type.placement', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='federated', full_name='tensorflow_federated.v0.Type.federated', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='type', full_name='tensorflow_federated.v0.Type.type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=850,
  serialized_end=1276,
)


_FUNCTIONTYPE = _descriptor.Descriptor(
  name='FunctionType',
  full_name='tensorflow_federated.v0.FunctionType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameter', full_name='tensorflow_federated.v0.FunctionType.parameter', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='tensorflow_federated.v0.FunctionType.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1278,
  serialized_end=1389,
)


_NAMEDTUPLETYPE_ELEMENT = _descriptor.Descriptor(
  name='Element',
  full_name='tensorflow_federated.v0.NamedTupleType.Element',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='tensorflow_federated.v0.NamedTupleType.Element.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow_federated.v0.NamedTupleType.Element.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1476,
  serialized_end=1545,
)

_NAMEDTUPLETYPE = _descriptor.Descriptor(
  name='NamedTupleType',
  full_name='tensorflow_federated.v0.NamedTupleType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='element', full_name='tensorflow_federated.v0.NamedTupleType.element', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_NAMEDTUPLETYPE_ELEMENT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1392,
  serialized_end=1545,
)


_SEQUENCETYPE = _descriptor.Descriptor(
  name='SequenceType',
  full_name='tensorflow_federated.v0.SequenceType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='element', full_name='tensorflow_federated.v0.SequenceType.element', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1547,
  serialized_end=1609,
)


_TENSORTYPE = _descriptor.Descriptor(
  name='TensorType',
  full_name='tensorflow_federated.v0.TensorType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dtype', full_name='tensorflow_federated.v0.TensorType.dtype', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='shape', full_name='tensorflow_federated.v0.TensorType.shape', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1611,
  serialized_end=1705,
)


_ABSTRACTTYPE = _descriptor.Descriptor(
  name='AbstractType',
  full_name='tensorflow_federated.v0.AbstractType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='tensorflow_federated.v0.AbstractType.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1707,
  serialized_end=1736,
)


_PLACEMENTSPEC = _descriptor.Descriptor(
  name='PlacementSpec',
  full_name='tensorflow_federated.v0.PlacementSpec',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='tensorflow_federated.v0.PlacementSpec.label', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow_federated.v0.PlacementSpec.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='placement', full_name='tensorflow_federated.v0.PlacementSpec.placement',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1739,
  serialized_end=1878,
)


_PLACEMENTLABEL = _descriptor.Descriptor(
  name='PlacementLabel',
  full_name='tensorflow_federated.v0.PlacementLabel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='tensorflow_federated.v0.PlacementLabel.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1880,
  serialized_end=1911,
)


_PLACEMENT = _descriptor.Descriptor(
  name='Placement',
  full_name='tensorflow_federated.v0.Placement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uri', full_name='tensorflow_federated.v0.Placement.uri', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1913,
  serialized_end=1937,
)


_FEDERATEDTYPE = _descriptor.Descriptor(
  name='FederatedType',
  full_name='tensorflow_federated.v0.FederatedType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='placement', full_name='tensorflow_federated.v0.FederatedType.placement', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='all_equal', full_name='tensorflow_federated.v0.FederatedType.all_equal', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='member', full_name='tensorflow_federated.v0.FederatedType.member', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1940,
  serialized_end=2080,
)


_PLACEMENTTYPE = _descriptor.Descriptor(
  name='PlacementType',
  full_name='tensorflow_federated.v0.PlacementType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_label', full_name='tensorflow_federated.v0.PlacementType.instance_label', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2082,
  serialized_end=2162,
)


_TENSORFLOW_BINDING = _descriptor.Descriptor(
  name='Binding',
  full_name='tensorflow_federated.v0.TensorFlow.Binding',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tuple', full_name='tensorflow_federated.v0.TensorFlow.Binding.tuple', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tensor', full_name='tensorflow_federated.v0.TensorFlow.Binding.tensor', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sequence', full_name='tensorflow_federated.v0.TensorFlow.Binding.sequence', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='binding', full_name='tensorflow_federated.v0.TensorFlow.Binding.binding',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2369,
  serialized_end=2603,
)

_TENSORFLOW_NAMEDTUPLEBINDING = _descriptor.Descriptor(
  name='NamedTupleBinding',
  full_name='tensorflow_federated.v0.TensorFlow.NamedTupleBinding',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='element', full_name='tensorflow_federated.v0.TensorFlow.NamedTupleBinding.element', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2605,
  serialized_end=2686,
)

_TENSORFLOW_TENSORBINDING = _descriptor.Descriptor(
  name='TensorBinding',
  full_name='tensorflow_federated.v0.TensorFlow.TensorBinding',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tensor_name', full_name='tensorflow_federated.v0.TensorFlow.TensorBinding.tensor_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='binding', full_name='tensorflow_federated.v0.TensorFlow.TensorBinding.binding',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2688,
  serialized_end=2737,
)

_TENSORFLOW_SEQUENCEBINDING = _descriptor.Descriptor(
  name='SequenceBinding',
  full_name='tensorflow_federated.v0.TensorFlow.SequenceBinding',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='iterator_string_handle_name', full_name='tensorflow_federated.v0.TensorFlow.SequenceBinding.iterator_string_handle_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='binding', full_name='tensorflow_federated.v0.TensorFlow.SequenceBinding.binding',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2739,
  serialized_end=2806,
)

_TENSORFLOW = _descriptor.Descriptor(
  name='TensorFlow',
  full_name='tensorflow_federated.v0.TensorFlow',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='graph_def', full_name='tensorflow_federated.v0.TensorFlow.graph_def', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='initialize_op', full_name='tensorflow_federated.v0.TensorFlow.initialize_op', index=1,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parameter', full_name='tensorflow_federated.v0.TensorFlow.parameter', index=2,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='tensorflow_federated.v0.TensorFlow.result', index=3,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_TENSORFLOW_BINDING, _TENSORFLOW_NAMEDTUPLEBINDING, _TENSORFLOW_TENSORBINDING, _TENSORFLOW_SEQUENCEBINDING, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2165,
  serialized_end=2806,
)


_INTRINSIC = _descriptor.Descriptor(
  name='Intrinsic',
  full_name='tensorflow_federated.v0.Intrinsic',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uri', full_name='tensorflow_federated.v0.Intrinsic.uri', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2808,
  serialized_end=2832,
)


_LAMBDA = _descriptor.Descriptor(
  name='Lambda',
  full_name='tensorflow_federated.v0.Lambda',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameter_name', full_name='tensorflow_federated.v0.Lambda.parameter_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='tensorflow_federated.v0.Lambda.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2834,
  serialized_end=2920,
)


_BLOCK_LOCAL = _descriptor.Descriptor(
  name='Local',
  full_name='tensorflow_federated.v0.Block.Local',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='tensorflow_federated.v0.Block.Local.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow_federated.v0.Block.Local.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3039,
  serialized_end=3113,
)

_BLOCK = _descriptor.Descriptor(
  name='Block',
  full_name='tensorflow_federated.v0.Block',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='local', full_name='tensorflow_federated.v0.Block.local', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='tensorflow_federated.v0.Block.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_BLOCK_LOCAL, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2923,
  serialized_end=3113,
)


_REFERENCE = _descriptor.Descriptor(
  name='Reference',
  full_name='tensorflow_federated.v0.Reference',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='tensorflow_federated.v0.Reference.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3115,
  serialized_end=3140,
)


_CALL = _descriptor.Descriptor(
  name='Call',
  full_name='tensorflow_federated.v0.Call',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='function', full_name='tensorflow_federated.v0.Call.function', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='argument', full_name='tensorflow_federated.v0.Call.argument', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3142,
  serialized_end=3260,
)


_TUPLE_ELEMENT = _descriptor.Descriptor(
  name='Element',
  full_name='tensorflow_federated.v0.Tuple.Element',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='tensorflow_federated.v0.Tuple.Element.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow_federated.v0.Tuple.Element.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3329,
  serialized_end=3405,
)

_TUPLE = _descriptor.Descriptor(
  name='Tuple',
  full_name='tensorflow_federated.v0.Tuple',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='element', full_name='tensorflow_federated.v0.Tuple.element', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_TUPLE_ELEMENT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3263,
  serialized_end=3405,
)


_SELECTION = _descriptor.Descriptor(
  name='Selection',
  full_name='tensorflow_federated.v0.Selection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='source', full_name='tensorflow_federated.v0.Selection.source', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='tensorflow_federated.v0.Selection.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='index', full_name='tensorflow_federated.v0.Selection.index', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='selection', full_name='tensorflow_federated.v0.Selection.selection',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3407,
  serialized_end=3518,
)


_DATA = _descriptor.Descriptor(
  name='Data',
  full_name='tensorflow_federated.v0.Data',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uri', full_name='tensorflow_federated.v0.Data.uri', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='data', full_name='tensorflow_federated.v0.Data.data',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3520,
  serialized_end=3549,
)

_COMPUTATION.fields_by_name['type'].message_type = _TYPE
_COMPUTATION.fields_by_name['tensorflow'].message_type = _TENSORFLOW
_COMPUTATION.fields_by_name['intrinsic'].message_type = _INTRINSIC
_COMPUTATION.fields_by_name['data'].message_type = _DATA
_COMPUTATION.fields_by_name['lambda'].message_type = _LAMBDA
_COMPUTATION.fields_by_name['block'].message_type = _BLOCK
_COMPUTATION.fields_by_name['reference'].message_type = _REFERENCE
_COMPUTATION.fields_by_name['call'].message_type = _CALL
_COMPUTATION.fields_by_name['tuple'].message_type = _TUPLE
_COMPUTATION.fields_by_name['selection'].message_type = _SELECTION
_COMPUTATION.fields_by_name['placement'].message_type = _PLACEMENT
_COMPUTATION.oneofs_by_name['computation'].fields.append(
  _COMPUTATION.fields_by_name['tensorflow'])
_COMPUTATION.fields_by_name['tensorflow'].containing_oneof = _COMPUTATION.oneofs_by_name['computation']
_COMPUTATION.oneofs_by_name['computation'].fields.append(
  _COMPUTATION.fields_by_name['intrinsic'])
_COMPUTATION.fields_by_name['intrinsic'].containing_oneof = _COMPUTATION.oneofs_by_name['computation']
_COMPUTATION.oneofs_by_name['computation'].fields.append(
  _COMPUTATION.fields_by_name['data'])
_COMPUTATION.fields_by_name['data'].containing_oneof = _COMPUTATION.oneofs_by_name['computation']
_COMPUTATION.oneofs_by_name['computation'].fields.append(
  _COMPUTATION.fields_by_name['lambda'])
_COMPUTATION.fields_by_name['lambda'].containing_oneof = _COMPUTATION.oneofs_by_name['computation']
_COMPUTATION.oneofs_by_name['computation'].fields.append(
  _COMPUTATION.fields_by_name['block'])
_COMPUTATION.fields_by_name['block'].containing_oneof = _COMPUTATION.oneofs_by_name['computation']
_COMPUTATION.oneofs_by_name['computation'].fields.append(
  _COMPUTATION.fields_by_name['reference'])
_COMPUTATION.fields_by_name['reference'].containing_oneof = _COMPUTATION.oneofs_by_name['computation']
_COMPUTATION.oneofs_by_name['computation'].fields.append(
  _COMPUTATION.fields_by_name['call'])
_COMPUTATION.fields_by_name['call'].containing_oneof = _COMPUTATION.oneofs_by_name['computation']
_COMPUTATION.oneofs_by_name['computation'].fields.append(
  _COMPUTATION.fields_by_name['tuple'])
_COMPUTATION.fields_by_name['tuple'].containing_oneof = _COMPUTATION.oneofs_by_name['computation']
_COMPUTATION.oneofs_by_name['computation'].fields.append(
  _COMPUTATION.fields_by_name['selection'])
_COMPUTATION.fields_by_name['selection'].containing_oneof = _COMPUTATION.oneofs_by_name['computation']
_COMPUTATION.oneofs_by_name['computation'].fields.append(
  _COMPUTATION.fields_by_name['placement'])
_COMPUTATION.fields_by_name['placement'].containing_oneof = _COMPUTATION.oneofs_by_name['computation']
_TYPE.fields_by_name['function'].message_type = _FUNCTIONTYPE
_TYPE.fields_by_name['tuple'].message_type = _NAMEDTUPLETYPE
_TYPE.fields_by_name['sequence'].message_type = _SEQUENCETYPE
_TYPE.fields_by_name['tensor'].message_type = _TENSORTYPE
_TYPE.fields_by_name['abstract'].message_type = _ABSTRACTTYPE
_TYPE.fields_by_name['placement'].message_type = _PLACEMENTTYPE
_TYPE.fields_by_name['federated'].message_type = _FEDERATEDTYPE
_TYPE.oneofs_by_name['type'].fields.append(
  _TYPE.fields_by_name['function'])
_TYPE.fields_by_name['function'].containing_oneof = _TYPE.oneofs_by_name['type']
_TYPE.oneofs_by_name['type'].fields.append(
  _TYPE.fields_by_name['tuple'])
_TYPE.fields_by_name['tuple'].containing_oneof = _TYPE.oneofs_by_name['type']
_TYPE.oneofs_by_name['type'].fields.append(
  _TYPE.fields_by_name['sequence'])
_TYPE.fields_by_name['sequence'].containing_oneof = _TYPE.oneofs_by_name['type']
_TYPE.oneofs_by_name['type'].fields.append(
  _TYPE.fields_by_name['tensor'])
_TYPE.fields_by_name['tensor'].containing_oneof = _TYPE.oneofs_by_name['type']
_TYPE.oneofs_by_name['type'].fields.append(
  _TYPE.fields_by_name['abstract'])
_TYPE.fields_by_name['abstract'].containing_oneof = _TYPE.oneofs_by_name['type']
_TYPE.oneofs_by_name['type'].fields.append(
  _TYPE.fields_by_name['placement'])
_TYPE.fields_by_name['placement'].containing_oneof = _TYPE.oneofs_by_name['type']
_TYPE.oneofs_by_name['type'].fields.append(
  _TYPE.fields_by_name['federated'])
_TYPE.fields_by_name['federated'].containing_oneof = _TYPE.oneofs_by_name['type']
_FUNCTIONTYPE.fields_by_name['parameter'].message_type = _TYPE
_FUNCTIONTYPE.fields_by_name['result'].message_type = _TYPE
_NAMEDTUPLETYPE_ELEMENT.fields_by_name['value'].message_type = _TYPE
_NAMEDTUPLETYPE_ELEMENT.containing_type = _NAMEDTUPLETYPE
_NAMEDTUPLETYPE.fields_by_name['element'].message_type = _NAMEDTUPLETYPE_ELEMENT
_SEQUENCETYPE.fields_by_name['element'].message_type = _TYPE
_TENSORTYPE.fields_by_name['dtype'].enum_type = tensorflow_dot_core_dot_framework_dot_types__pb2._DATATYPE
_TENSORTYPE.fields_by_name['shape'].message_type = tensorflow_dot_core_dot_framework_dot_tensor__shape__pb2._TENSORSHAPEPROTO
_PLACEMENTSPEC.fields_by_name['label'].message_type = _PLACEMENTLABEL
_PLACEMENTSPEC.fields_by_name['value'].message_type = _PLACEMENT
_PLACEMENTSPEC.oneofs_by_name['placement'].fields.append(
  _PLACEMENTSPEC.fields_by_name['label'])
_PLACEMENTSPEC.fields_by_name['label'].containing_oneof = _PLACEMENTSPEC.oneofs_by_name['placement']
_PLACEMENTSPEC.oneofs_by_name['placement'].fields.append(
  _PLACEMENTSPEC.fields_by_name['value'])
_PLACEMENTSPEC.fields_by_name['value'].containing_oneof = _PLACEMENTSPEC.oneofs_by_name['placement']
_FEDERATEDTYPE.fields_by_name['placement'].message_type = _PLACEMENTSPEC
_FEDERATEDTYPE.fields_by_name['member'].message_type = _TYPE
_PLACEMENTTYPE.fields_by_name['instance_label'].message_type = _PLACEMENTLABEL
_TENSORFLOW_BINDING.fields_by_name['tuple'].message_type = _TENSORFLOW_NAMEDTUPLEBINDING
_TENSORFLOW_BINDING.fields_by_name['tensor'].message_type = _TENSORFLOW_TENSORBINDING
_TENSORFLOW_BINDING.fields_by_name['sequence'].message_type = _TENSORFLOW_SEQUENCEBINDING
_TENSORFLOW_BINDING.containing_type = _TENSORFLOW
_TENSORFLOW_BINDING.oneofs_by_name['binding'].fields.append(
  _TENSORFLOW_BINDING.fields_by_name['tuple'])
_TENSORFLOW_BINDING.fields_by_name['tuple'].containing_oneof = _TENSORFLOW_BINDING.oneofs_by_name['binding']
_TENSORFLOW_BINDING.oneofs_by_name['binding'].fields.append(
  _TENSORFLOW_BINDING.fields_by_name['tensor'])
_TENSORFLOW_BINDING.fields_by_name['tensor'].containing_oneof = _TENSORFLOW_BINDING.oneofs_by_name['binding']
_TENSORFLOW_BINDING.oneofs_by_name['binding'].fields.append(
  _TENSORFLOW_BINDING.fields_by_name['sequence'])
_TENSORFLOW_BINDING.fields_by_name['sequence'].containing_oneof = _TENSORFLOW_BINDING.oneofs_by_name['binding']
_TENSORFLOW_NAMEDTUPLEBINDING.fields_by_name['element'].message_type = _TENSORFLOW_BINDING
_TENSORFLOW_NAMEDTUPLEBINDING.containing_type = _TENSORFLOW
_TENSORFLOW_TENSORBINDING.containing_type = _TENSORFLOW
_TENSORFLOW_TENSORBINDING.oneofs_by_name['binding'].fields.append(
  _TENSORFLOW_TENSORBINDING.fields_by_name['tensor_name'])
_TENSORFLOW_TENSORBINDING.fields_by_name['tensor_name'].containing_oneof = _TENSORFLOW_TENSORBINDING.oneofs_by_name['binding']
_TENSORFLOW_SEQUENCEBINDING.containing_type = _TENSORFLOW
_TENSORFLOW_SEQUENCEBINDING.oneofs_by_name['binding'].fields.append(
  _TENSORFLOW_SEQUENCEBINDING.fields_by_name['iterator_string_handle_name'])
_TENSORFLOW_SEQUENCEBINDING.fields_by_name['iterator_string_handle_name'].containing_oneof = _TENSORFLOW_SEQUENCEBINDING.oneofs_by_name['binding']
_TENSORFLOW.fields_by_name['graph_def'].message_type = tensorflow_dot_core_dot_framework_dot_graph__pb2._GRAPHDEF
_TENSORFLOW.fields_by_name['parameter'].message_type = _TENSORFLOW_BINDING
_TENSORFLOW.fields_by_name['result'].message_type = _TENSORFLOW_BINDING
_LAMBDA.fields_by_name['result'].message_type = _COMPUTATION
_BLOCK_LOCAL.fields_by_name['value'].message_type = _COMPUTATION
_BLOCK_LOCAL.containing_type = _BLOCK
_BLOCK.fields_by_name['local'].message_type = _BLOCK_LOCAL
_BLOCK.fields_by_name['result'].message_type = _COMPUTATION
_CALL.fields_by_name['function'].message_type = _COMPUTATION
_CALL.fields_by_name['argument'].message_type = _COMPUTATION
_TUPLE_ELEMENT.fields_by_name['value'].message_type = _COMPUTATION
_TUPLE_ELEMENT.containing_type = _TUPLE
_TUPLE.fields_by_name['element'].message_type = _TUPLE_ELEMENT
_SELECTION.fields_by_name['source'].message_type = _COMPUTATION
_SELECTION.oneofs_by_name['selection'].fields.append(
  _SELECTION.fields_by_name['name'])
_SELECTION.fields_by_name['name'].containing_oneof = _SELECTION.oneofs_by_name['selection']
_SELECTION.oneofs_by_name['selection'].fields.append(
  _SELECTION.fields_by_name['index'])
_SELECTION.fields_by_name['index'].containing_oneof = _SELECTION.oneofs_by_name['selection']
_DATA.oneofs_by_name['data'].fields.append(
  _DATA.fields_by_name['uri'])
_DATA.fields_by_name['uri'].containing_oneof = _DATA.oneofs_by_name['data']
DESCRIPTOR.message_types_by_name['Computation'] = _COMPUTATION
DESCRIPTOR.message_types_by_name['Type'] = _TYPE
DESCRIPTOR.message_types_by_name['FunctionType'] = _FUNCTIONTYPE
DESCRIPTOR.message_types_by_name['NamedTupleType'] = _NAMEDTUPLETYPE
DESCRIPTOR.message_types_by_name['SequenceType'] = _SEQUENCETYPE
DESCRIPTOR.message_types_by_name['TensorType'] = _TENSORTYPE
DESCRIPTOR.message_types_by_name['AbstractType'] = _ABSTRACTTYPE
DESCRIPTOR.message_types_by_name['PlacementSpec'] = _PLACEMENTSPEC
DESCRIPTOR.message_types_by_name['PlacementLabel'] = _PLACEMENTLABEL
DESCRIPTOR.message_types_by_name['Placement'] = _PLACEMENT
DESCRIPTOR.message_types_by_name['FederatedType'] = _FEDERATEDTYPE
DESCRIPTOR.message_types_by_name['PlacementType'] = _PLACEMENTTYPE
DESCRIPTOR.message_types_by_name['TensorFlow'] = _TENSORFLOW
DESCRIPTOR.message_types_by_name['Intrinsic'] = _INTRINSIC
DESCRIPTOR.message_types_by_name['Lambda'] = _LAMBDA
DESCRIPTOR.message_types_by_name['Block'] = _BLOCK
DESCRIPTOR.message_types_by_name['Reference'] = _REFERENCE
DESCRIPTOR.message_types_by_name['Call'] = _CALL
DESCRIPTOR.message_types_by_name['Tuple'] = _TUPLE
DESCRIPTOR.message_types_by_name['Selection'] = _SELECTION
DESCRIPTOR.message_types_by_name['Data'] = _DATA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Computation = _reflection.GeneratedProtocolMessageType('Computation', (_message.Message,), dict(
  DESCRIPTOR = _COMPUTATION,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Computation)
  ))
_sym_db.RegisterMessage(Computation)

Type = _reflection.GeneratedProtocolMessageType('Type', (_message.Message,), dict(
  DESCRIPTOR = _TYPE,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Type)
  ))
_sym_db.RegisterMessage(Type)

FunctionType = _reflection.GeneratedProtocolMessageType('FunctionType', (_message.Message,), dict(
  DESCRIPTOR = _FUNCTIONTYPE,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.FunctionType)
  ))
_sym_db.RegisterMessage(FunctionType)

NamedTupleType = _reflection.GeneratedProtocolMessageType('NamedTupleType', (_message.Message,), dict(

  Element = _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), dict(
    DESCRIPTOR = _NAMEDTUPLETYPE_ELEMENT,
    __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.NamedTupleType.Element)
    ))
  ,
  DESCRIPTOR = _NAMEDTUPLETYPE,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.NamedTupleType)
  ))
_sym_db.RegisterMessage(NamedTupleType)
_sym_db.RegisterMessage(NamedTupleType.Element)

SequenceType = _reflection.GeneratedProtocolMessageType('SequenceType', (_message.Message,), dict(
  DESCRIPTOR = _SEQUENCETYPE,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.SequenceType)
  ))
_sym_db.RegisterMessage(SequenceType)

TensorType = _reflection.GeneratedProtocolMessageType('TensorType', (_message.Message,), dict(
  DESCRIPTOR = _TENSORTYPE,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorType)
  ))
_sym_db.RegisterMessage(TensorType)

AbstractType = _reflection.GeneratedProtocolMessageType('AbstractType', (_message.Message,), dict(
  DESCRIPTOR = _ABSTRACTTYPE,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.AbstractType)
  ))
_sym_db.RegisterMessage(AbstractType)

PlacementSpec = _reflection.GeneratedProtocolMessageType('PlacementSpec', (_message.Message,), dict(
  DESCRIPTOR = _PLACEMENTSPEC,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.PlacementSpec)
  ))
_sym_db.RegisterMessage(PlacementSpec)

PlacementLabel = _reflection.GeneratedProtocolMessageType('PlacementLabel', (_message.Message,), dict(
  DESCRIPTOR = _PLACEMENTLABEL,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.PlacementLabel)
  ))
_sym_db.RegisterMessage(PlacementLabel)

Placement = _reflection.GeneratedProtocolMessageType('Placement', (_message.Message,), dict(
  DESCRIPTOR = _PLACEMENT,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Placement)
  ))
_sym_db.RegisterMessage(Placement)

FederatedType = _reflection.GeneratedProtocolMessageType('FederatedType', (_message.Message,), dict(
  DESCRIPTOR = _FEDERATEDTYPE,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.FederatedType)
  ))
_sym_db.RegisterMessage(FederatedType)

PlacementType = _reflection.GeneratedProtocolMessageType('PlacementType', (_message.Message,), dict(
  DESCRIPTOR = _PLACEMENTTYPE,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.PlacementType)
  ))
_sym_db.RegisterMessage(PlacementType)

TensorFlow = _reflection.GeneratedProtocolMessageType('TensorFlow', (_message.Message,), dict(

  Binding = _reflection.GeneratedProtocolMessageType('Binding', (_message.Message,), dict(
    DESCRIPTOR = _TENSORFLOW_BINDING,
    __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow.Binding)
    ))
  ,

  NamedTupleBinding = _reflection.GeneratedProtocolMessageType('NamedTupleBinding', (_message.Message,), dict(
    DESCRIPTOR = _TENSORFLOW_NAMEDTUPLEBINDING,
    __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow.NamedTupleBinding)
    ))
  ,

  TensorBinding = _reflection.GeneratedProtocolMessageType('TensorBinding', (_message.Message,), dict(
    DESCRIPTOR = _TENSORFLOW_TENSORBINDING,
    __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow.TensorBinding)
    ))
  ,

  SequenceBinding = _reflection.GeneratedProtocolMessageType('SequenceBinding', (_message.Message,), dict(
    DESCRIPTOR = _TENSORFLOW_SEQUENCEBINDING,
    __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow.SequenceBinding)
    ))
  ,
  DESCRIPTOR = _TENSORFLOW,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow)
  ))
_sym_db.RegisterMessage(TensorFlow)
_sym_db.RegisterMessage(TensorFlow.Binding)
_sym_db.RegisterMessage(TensorFlow.NamedTupleBinding)
_sym_db.RegisterMessage(TensorFlow.TensorBinding)
_sym_db.RegisterMessage(TensorFlow.SequenceBinding)

Intrinsic = _reflection.GeneratedProtocolMessageType('Intrinsic', (_message.Message,), dict(
  DESCRIPTOR = _INTRINSIC,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Intrinsic)
  ))
_sym_db.RegisterMessage(Intrinsic)

Lambda = _reflection.GeneratedProtocolMessageType('Lambda', (_message.Message,), dict(
  DESCRIPTOR = _LAMBDA,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Lambda)
  ))
_sym_db.RegisterMessage(Lambda)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), dict(

  Local = _reflection.GeneratedProtocolMessageType('Local', (_message.Message,), dict(
    DESCRIPTOR = _BLOCK_LOCAL,
    __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Block.Local)
    ))
  ,
  DESCRIPTOR = _BLOCK,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Block)
  ))
_sym_db.RegisterMessage(Block)
_sym_db.RegisterMessage(Block.Local)

Reference = _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), dict(
  DESCRIPTOR = _REFERENCE,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Reference)
  ))
_sym_db.RegisterMessage(Reference)

Call = _reflection.GeneratedProtocolMessageType('Call', (_message.Message,), dict(
  DESCRIPTOR = _CALL,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Call)
  ))
_sym_db.RegisterMessage(Call)

Tuple = _reflection.GeneratedProtocolMessageType('Tuple', (_message.Message,), dict(

  Element = _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), dict(
    DESCRIPTOR = _TUPLE_ELEMENT,
    __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Tuple.Element)
    ))
  ,
  DESCRIPTOR = _TUPLE,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Tuple)
  ))
_sym_db.RegisterMessage(Tuple)
_sym_db.RegisterMessage(Tuple.Element)

Selection = _reflection.GeneratedProtocolMessageType('Selection', (_message.Message,), dict(
  DESCRIPTOR = _SELECTION,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Selection)
  ))
_sym_db.RegisterMessage(Selection)

Data = _reflection.GeneratedProtocolMessageType('Data', (_message.Message,), dict(
  DESCRIPTOR = _DATA,
  __module__ = 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Data)
  ))
_sym_db.RegisterMessage(Data)


# @@protoc_insertion_point(module_scope)
