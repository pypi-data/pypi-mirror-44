Metadata-Version: 1.2
Name: dcron
Version: 0.8.7
Summary: Distributed Cronlike Scheduler
Home-page: https://github.com/witlox/dcron
Author: Pim Witlox
Author-email: pim@witlox.io
License: MIT
Project-URL: Documentation, https://dcron.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/witlox/dcron
Project-URL: Tracker, https://github.com/witlox/dcron/issues
Description: ## Distributed Cronlike Scheduler [![Build Status](https://travis-ci.org/witlox/dcron.svg?branch=master)](https://travis-ci.org/witlox/dcron)
        
        The aim of dcron is to offer [cron](https://en.wikipedia.org/wiki/Cron) like behaviour spanning multiple machines. 
        The system offers a web interface to manage your jobs, and reports the health of the cluster. 
        Everything is self contained, so you only need to start the system to have a working setup. 
        We do however recommend that you run the system behind a reverse proxy, since there is no authentication mechanism.
        Please check the [docs](https://dcron.readthedocs.io) regarding installation, configuration and options.  
        
        ## Details
        
        - dcron requires Python 3.7+ in order to work.
        - all nodes running dcron need to have the same software installed you want dcron to run
        - dcron runs tasks at-most-once (according to schedule)
        
        ## Installation
        
        ``pip install dcron``
        
        ## Options
        
        - -l or --log-file: by default we only log to stdout/stderr, specify a path and a log file will be created
        - -p or --storage-path: we cache our stuff directly in memory, if you wan't your runtime configuration to be saved, specify a folder here
        - -c or --communication-port: udp broadcast is used for synchronization between nodes, specify a port here (default: 12345)
        - -w or --web-port: port to host the web interface (default: 8080)
        - -n or --ntp-server: given that we are doing cron, we need time sync to be relatively close, if skewed, we break (default: pool.ntp.org) 
        - -s or --node-staleness: after x seconds of inactivity a node is marked stale and jobs are redistributed over active nodes
        - -v or --verbose: more logging
Keywords: Python,Python3
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: System Administrators
Classifier: Natural Language :: English
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Utilities
Requires-Python: >=3.7
