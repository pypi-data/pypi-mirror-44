# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from dynagatewaytypes import action_pb2 as dynagatewaytypes_dot_action__pb2
from dynagatewaytypes import general_types_pb2 as dynagatewaytypes_dot_general__types__pb2


class ActionServiceStub(object):
  """Action service.
  Stream results are sent asynchronous.
  Result messages contain a field stream_index which can be used to match the result with the request.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.stream_stream(
        '/dynagatewaytypes.ActionService/Create',
        request_serializer=dynagatewaytypes_dot_action__pb2.CreateActionReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_action__pb2.CreateActionRes.FromString,
        )
    self.Get = channel.stream_stream(
        '/dynagatewaytypes.ActionService/Get',
        request_serializer=dynagatewaytypes_dot_action__pb2.GetActionReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_action__pb2.GetActionRes.FromString,
        )
    self.Count = channel.unary_unary(
        '/dynagatewaytypes.ActionService/Count',
        request_serializer=dynagatewaytypes_dot_general__types__pb2.EmptyReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_general__types__pb2.CountRes.FromString,
        )
    self.Show = channel.unary_stream(
        '/dynagatewaytypes.ActionService/Show',
        request_serializer=dynagatewaytypes_dot_general__types__pb2.ShowReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_action__pb2.GetActionRes.FromString,
        )
    self.Rename = channel.stream_stream(
        '/dynagatewaytypes.ActionService/Rename',
        request_serializer=dynagatewaytypes_dot_action__pb2.RenameActionReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_general__types__pb2.EmptyStreamRes.FromString,
        )
    self.Delete = channel.stream_stream(
        '/dynagatewaytypes.ActionService/Delete',
        request_serializer=dynagatewaytypes_dot_action__pb2.DeleteActionReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_general__types__pb2.EmptyStreamRes.FromString,
        )


class ActionServiceServicer(object):
  """Action service.
  Stream results are sent asynchronous.
  Result messages contain a field stream_index which can be used to match the result with the request.
  """

  def Create(self, request_iterator, context):
    """Creates Actions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get(self, request_iterator, context):
    """Gets actions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Count(self, request, context):
    """Counts all actions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Show(self, request, context):
    """Shows all actions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Rename(self, request_iterator, context):
    """Renames actions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete(self, request_iterator, context):
    """Deletes actions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ActionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.stream_stream_rpc_method_handler(
          servicer.Create,
          request_deserializer=dynagatewaytypes_dot_action__pb2.CreateActionReq.FromString,
          response_serializer=dynagatewaytypes_dot_action__pb2.CreateActionRes.SerializeToString,
      ),
      'Get': grpc.stream_stream_rpc_method_handler(
          servicer.Get,
          request_deserializer=dynagatewaytypes_dot_action__pb2.GetActionReq.FromString,
          response_serializer=dynagatewaytypes_dot_action__pb2.GetActionRes.SerializeToString,
      ),
      'Count': grpc.unary_unary_rpc_method_handler(
          servicer.Count,
          request_deserializer=dynagatewaytypes_dot_general__types__pb2.EmptyReq.FromString,
          response_serializer=dynagatewaytypes_dot_general__types__pb2.CountRes.SerializeToString,
      ),
      'Show': grpc.unary_stream_rpc_method_handler(
          servicer.Show,
          request_deserializer=dynagatewaytypes_dot_general__types__pb2.ShowReq.FromString,
          response_serializer=dynagatewaytypes_dot_action__pb2.GetActionRes.SerializeToString,
      ),
      'Rename': grpc.stream_stream_rpc_method_handler(
          servicer.Rename,
          request_deserializer=dynagatewaytypes_dot_action__pb2.RenameActionReq.FromString,
          response_serializer=dynagatewaytypes_dot_general__types__pb2.EmptyStreamRes.SerializeToString,
      ),
      'Delete': grpc.stream_stream_rpc_method_handler(
          servicer.Delete,
          request_deserializer=dynagatewaytypes_dot_action__pb2.DeleteActionReq.FromString,
          response_serializer=dynagatewaytypes_dot_general__types__pb2.EmptyStreamRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dynagatewaytypes.ActionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
