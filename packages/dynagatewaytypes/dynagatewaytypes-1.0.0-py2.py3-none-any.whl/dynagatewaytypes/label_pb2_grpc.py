# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from dynagatewaytypes import general_types_pb2 as dynagatewaytypes_dot_general__types__pb2
from dynagatewaytypes import label_pb2 as dynagatewaytypes_dot_label__pb2


class LabelServiceStub(object):
  """Label service.
  Stream results are sent asynchronous.
  Result messages contain a field stream_index which can be used to match the result with the request.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.stream_stream(
        '/dynagatewaytypes.LabelService/Create',
        request_serializer=dynagatewaytypes_dot_label__pb2.CreateLabelsReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_general__types__pb2.EmptyStreamRes.FromString,
        )
    self.Get = channel.stream_stream(
        '/dynagatewaytypes.LabelService/Get',
        request_serializer=dynagatewaytypes_dot_label__pb2.GetLabelsReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_label__pb2.GetLabelsRes.FromString,
        )
    self.Rename = channel.stream_stream(
        '/dynagatewaytypes.LabelService/Rename',
        request_serializer=dynagatewaytypes_dot_label__pb2.RenameLabelReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_general__types__pb2.EmptyStreamRes.FromString,
        )
    self.Delete = channel.stream_stream(
        '/dynagatewaytypes.LabelService/Delete',
        request_serializer=dynagatewaytypes_dot_label__pb2.DeleteLabelReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_general__types__pb2.EmptyStreamRes.FromString,
        )
    self.DeleteAll = channel.stream_stream(
        '/dynagatewaytypes.LabelService/DeleteAll',
        request_serializer=dynagatewaytypes_dot_label__pb2.DeleteAllLabelsReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_general__types__pb2.EmptyStreamRes.FromString,
        )


class LabelServiceServicer(object):
  """Label service.
  Stream results are sent asynchronous.
  Result messages contain a field stream_index which can be used to match the result with the request.
  """

  def Create(self, request_iterator, context):
    """Creates labels.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get(self, request_iterator, context):
    """Gets labels.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Rename(self, request_iterator, context):
    """Renames labels.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete(self, request_iterator, context):
    """Deletes labels.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteAll(self, request_iterator, context):
    """Deletes all labels.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LabelServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.stream_stream_rpc_method_handler(
          servicer.Create,
          request_deserializer=dynagatewaytypes_dot_label__pb2.CreateLabelsReq.FromString,
          response_serializer=dynagatewaytypes_dot_general__types__pb2.EmptyStreamRes.SerializeToString,
      ),
      'Get': grpc.stream_stream_rpc_method_handler(
          servicer.Get,
          request_deserializer=dynagatewaytypes_dot_label__pb2.GetLabelsReq.FromString,
          response_serializer=dynagatewaytypes_dot_label__pb2.GetLabelsRes.SerializeToString,
      ),
      'Rename': grpc.stream_stream_rpc_method_handler(
          servicer.Rename,
          request_deserializer=dynagatewaytypes_dot_label__pb2.RenameLabelReq.FromString,
          response_serializer=dynagatewaytypes_dot_general__types__pb2.EmptyStreamRes.SerializeToString,
      ),
      'Delete': grpc.stream_stream_rpc_method_handler(
          servicer.Delete,
          request_deserializer=dynagatewaytypes_dot_label__pb2.DeleteLabelReq.FromString,
          response_serializer=dynagatewaytypes_dot_general__types__pb2.EmptyStreamRes.SerializeToString,
      ),
      'DeleteAll': grpc.stream_stream_rpc_method_handler(
          servicer.DeleteAll,
          request_deserializer=dynagatewaytypes_dot_label__pb2.DeleteAllLabelsReq.FromString,
          response_serializer=dynagatewaytypes_dot_general__types__pb2.EmptyStreamRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dynagatewaytypes.LabelService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
