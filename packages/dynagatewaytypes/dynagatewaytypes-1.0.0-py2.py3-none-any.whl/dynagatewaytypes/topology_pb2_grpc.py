# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from dynagatewaytypes import topology_pb2 as dynagatewaytypes_dot_topology__pb2


class TopologyServiceStub(object):
  """Topology service.
  Stream results are sent asynchronous.
  Result messages contain a field stream_index which can be used to match the result with the request.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.stream_stream(
        '/dynagatewaytypes.TopologyService/Create',
        request_serializer=dynagatewaytypes_dot_topology__pb2.CreateTopologyReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_topology__pb2.CreateTopologyRes.FromString,
        )
    self.Get = channel.stream_stream(
        '/dynagatewaytypes.TopologyService/Get',
        request_serializer=dynagatewaytypes_dot_topology__pb2.GetTopologyReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_topology__pb2.GetTopologyRes.FromString,
        )


class TopologyServiceServicer(object):
  """Topology service.
  Stream results are sent asynchronous.
  Result messages contain a field stream_index which can be used to match the result with the request.
  """

  def Create(self, request_iterator, context):
    """Creates topologies.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get(self, request_iterator, context):
    """Gets topologies.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TopologyServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.stream_stream_rpc_method_handler(
          servicer.Create,
          request_deserializer=dynagatewaytypes_dot_topology__pb2.CreateTopologyReq.FromString,
          response_serializer=dynagatewaytypes_dot_topology__pb2.CreateTopologyRes.SerializeToString,
      ),
      'Get': grpc.stream_stream_rpc_method_handler(
          servicer.Get,
          request_deserializer=dynagatewaytypes_dot_topology__pb2.GetTopologyReq.FromString,
          response_serializer=dynagatewaytypes_dot_topology__pb2.GetTopologyRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dynagatewaytypes.TopologyService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
