# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from dynagatewaytypes import general_types_pb2 as dynagatewaytypes_dot_general__types__pb2
from dynagatewaytypes import query_pb2 as dynagatewaytypes_dot_query__pb2


class QueryServiceStub(object):
  """Query service.
  Stream results are sent asynchronous.
  Result messages contain a field stream_index which can be used to match the result with the request.
  Query requests return a cursor UUID, which can be used to fetch results in a specific format.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Action = channel.unary_unary(
        '/dynagatewaytypes.QueryService/Action',
        request_serializer=dynagatewaytypes_dot_query__pb2.QueryReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_query__pb2.ActionQueryRes.FromString,
        )
    self.Topology = channel.unary_unary(
        '/dynagatewaytypes.QueryService/Topology',
        request_serializer=dynagatewaytypes_dot_query__pb2.QueryReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_query__pb2.TopologyQueryRes.FromString,
        )
    self.Instance = channel.unary_unary(
        '/dynagatewaytypes.QueryService/Instance',
        request_serializer=dynagatewaytypes_dot_query__pb2.QueryReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_query__pb2.InstanceQueryRes.FromString,
        )
    self.GetSubSetMetaDataEXP = channel.unary_stream(
        '/dynagatewaytypes.QueryService/GetSubSetMetaDataEXP',
        request_serializer=dynagatewaytypes_dot_query__pb2.GetSubSetMetaDataReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_query__pb2.GetSubSetMetaDataRes.FromString,
        )
    self.GetWideColumnNamesEXP = channel.unary_stream(
        '/dynagatewaytypes.QueryService/GetWideColumnNamesEXP',
        request_serializer=dynagatewaytypes_dot_query__pb2.GetWideColumnNamesReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_query__pb2.GetWideColumnNamesRes.FromString,
        )
    self.CountActions = channel.unary_unary(
        '/dynagatewaytypes.QueryService/CountActions',
        request_serializer=dynagatewaytypes_dot_query__pb2.CursorCountReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_general__types__pb2.CountRes.FromString,
        )
    self.CountTopologies = channel.unary_unary(
        '/dynagatewaytypes.QueryService/CountTopologies',
        request_serializer=dynagatewaytypes_dot_query__pb2.CursorCountReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_general__types__pb2.CountRes.FromString,
        )
    self.CountInstances = channel.unary_unary(
        '/dynagatewaytypes.QueryService/CountInstances',
        request_serializer=dynagatewaytypes_dot_query__pb2.CursorCountReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_general__types__pb2.CountRes.FromString,
        )
    self.CountSubSetInstancesEXP = channel.unary_unary(
        '/dynagatewaytypes.QueryService/CountSubSetInstancesEXP',
        request_serializer=dynagatewaytypes_dot_query__pb2.CountSubSetInstancesReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_general__types__pb2.CountRes.FromString,
        )
    self.CountWideColumnNamesEXP = channel.unary_unary(
        '/dynagatewaytypes.QueryService/CountWideColumnNamesEXP',
        request_serializer=dynagatewaytypes_dot_query__pb2.CursorCountReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_general__types__pb2.CountRes.FromString,
        )
    self.FetchActions = channel.unary_stream(
        '/dynagatewaytypes.QueryService/FetchActions',
        request_serializer=dynagatewaytypes_dot_query__pb2.ActionFetchReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_query__pb2.ActionFetchRes.FromString,
        )
    self.FetchTopologies = channel.unary_stream(
        '/dynagatewaytypes.QueryService/FetchTopologies',
        request_serializer=dynagatewaytypes_dot_query__pb2.TopologyFetchReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_query__pb2.TopologyFetchRes.FromString,
        )
    self.FetchInstances = channel.unary_stream(
        '/dynagatewaytypes.QueryService/FetchInstances',
        request_serializer=dynagatewaytypes_dot_query__pb2.InstanceFetchReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_query__pb2.InstanceFetchRes.FromString,
        )
    self.FetchInstanceSubSetEXP = channel.unary_stream(
        '/dynagatewaytypes.QueryService/FetchInstanceSubSetEXP',
        request_serializer=dynagatewaytypes_dot_query__pb2.FetchInstanceSubSetReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_query__pb2.InstanceFetchRes.FromString,
        )
    self.FetchWideColumnTableEXP = channel.unary_stream(
        '/dynagatewaytypes.QueryService/FetchWideColumnTableEXP',
        request_serializer=dynagatewaytypes_dot_query__pb2.WideColumnTableFetchReq.SerializeToString,
        response_deserializer=dynagatewaytypes_dot_query__pb2.WideColumnTableFetchRes.FromString,
        )


class QueryServiceServicer(object):
  """Query service.
  Stream results are sent asynchronous.
  Result messages contain a field stream_index which can be used to match the result with the request.
  Query requests return a cursor UUID, which can be used to fetch results in a specific format.
  """

  def Action(self, request, context):
    """Queries actions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Topology(self, request, context):
    """Queries topologies.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Instance(self, request, context):
    """Queries instances.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSubSetMetaDataEXP(self, request, context):
    """Gets cursor subset metadata (Experimental).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetWideColumnNamesEXP(self, request, context):
    """Gets cursor wide coluln names (Experimental).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CountActions(self, request, context):
    """Counts cursor actions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CountTopologies(self, request, context):
    """Counts cursor topologies.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CountInstances(self, request, context):
    """Counts cursor instances.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CountSubSetInstancesEXP(self, request, context):
    """Counts cursor instances in specific subset (Experimental).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CountWideColumnNamesEXP(self, request, context):
    """Counts cursor wide column names (Experimental).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FetchActions(self, request, context):
    """Fetches actions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FetchTopologies(self, request, context):
    """Fetches topologies.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FetchInstances(self, request, context):
    """Fetches instances.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FetchInstanceSubSetEXP(self, request, context):
    """Fetches instances in a specific subset (Experimental).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FetchWideColumnTableEXP(self, request, context):
    """Fetches instances in a wide column representation (Experimental).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QueryServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Action': grpc.unary_unary_rpc_method_handler(
          servicer.Action,
          request_deserializer=dynagatewaytypes_dot_query__pb2.QueryReq.FromString,
          response_serializer=dynagatewaytypes_dot_query__pb2.ActionQueryRes.SerializeToString,
      ),
      'Topology': grpc.unary_unary_rpc_method_handler(
          servicer.Topology,
          request_deserializer=dynagatewaytypes_dot_query__pb2.QueryReq.FromString,
          response_serializer=dynagatewaytypes_dot_query__pb2.TopologyQueryRes.SerializeToString,
      ),
      'Instance': grpc.unary_unary_rpc_method_handler(
          servicer.Instance,
          request_deserializer=dynagatewaytypes_dot_query__pb2.QueryReq.FromString,
          response_serializer=dynagatewaytypes_dot_query__pb2.InstanceQueryRes.SerializeToString,
      ),
      'GetSubSetMetaDataEXP': grpc.unary_stream_rpc_method_handler(
          servicer.GetSubSetMetaDataEXP,
          request_deserializer=dynagatewaytypes_dot_query__pb2.GetSubSetMetaDataReq.FromString,
          response_serializer=dynagatewaytypes_dot_query__pb2.GetSubSetMetaDataRes.SerializeToString,
      ),
      'GetWideColumnNamesEXP': grpc.unary_stream_rpc_method_handler(
          servicer.GetWideColumnNamesEXP,
          request_deserializer=dynagatewaytypes_dot_query__pb2.GetWideColumnNamesReq.FromString,
          response_serializer=dynagatewaytypes_dot_query__pb2.GetWideColumnNamesRes.SerializeToString,
      ),
      'CountActions': grpc.unary_unary_rpc_method_handler(
          servicer.CountActions,
          request_deserializer=dynagatewaytypes_dot_query__pb2.CursorCountReq.FromString,
          response_serializer=dynagatewaytypes_dot_general__types__pb2.CountRes.SerializeToString,
      ),
      'CountTopologies': grpc.unary_unary_rpc_method_handler(
          servicer.CountTopologies,
          request_deserializer=dynagatewaytypes_dot_query__pb2.CursorCountReq.FromString,
          response_serializer=dynagatewaytypes_dot_general__types__pb2.CountRes.SerializeToString,
      ),
      'CountInstances': grpc.unary_unary_rpc_method_handler(
          servicer.CountInstances,
          request_deserializer=dynagatewaytypes_dot_query__pb2.CursorCountReq.FromString,
          response_serializer=dynagatewaytypes_dot_general__types__pb2.CountRes.SerializeToString,
      ),
      'CountSubSetInstancesEXP': grpc.unary_unary_rpc_method_handler(
          servicer.CountSubSetInstancesEXP,
          request_deserializer=dynagatewaytypes_dot_query__pb2.CountSubSetInstancesReq.FromString,
          response_serializer=dynagatewaytypes_dot_general__types__pb2.CountRes.SerializeToString,
      ),
      'CountWideColumnNamesEXP': grpc.unary_unary_rpc_method_handler(
          servicer.CountWideColumnNamesEXP,
          request_deserializer=dynagatewaytypes_dot_query__pb2.CursorCountReq.FromString,
          response_serializer=dynagatewaytypes_dot_general__types__pb2.CountRes.SerializeToString,
      ),
      'FetchActions': grpc.unary_stream_rpc_method_handler(
          servicer.FetchActions,
          request_deserializer=dynagatewaytypes_dot_query__pb2.ActionFetchReq.FromString,
          response_serializer=dynagatewaytypes_dot_query__pb2.ActionFetchRes.SerializeToString,
      ),
      'FetchTopologies': grpc.unary_stream_rpc_method_handler(
          servicer.FetchTopologies,
          request_deserializer=dynagatewaytypes_dot_query__pb2.TopologyFetchReq.FromString,
          response_serializer=dynagatewaytypes_dot_query__pb2.TopologyFetchRes.SerializeToString,
      ),
      'FetchInstances': grpc.unary_stream_rpc_method_handler(
          servicer.FetchInstances,
          request_deserializer=dynagatewaytypes_dot_query__pb2.InstanceFetchReq.FromString,
          response_serializer=dynagatewaytypes_dot_query__pb2.InstanceFetchRes.SerializeToString,
      ),
      'FetchInstanceSubSetEXP': grpc.unary_stream_rpc_method_handler(
          servicer.FetchInstanceSubSetEXP,
          request_deserializer=dynagatewaytypes_dot_query__pb2.FetchInstanceSubSetReq.FromString,
          response_serializer=dynagatewaytypes_dot_query__pb2.InstanceFetchRes.SerializeToString,
      ),
      'FetchWideColumnTableEXP': grpc.unary_stream_rpc_method_handler(
          servicer.FetchWideColumnTableEXP,
          request_deserializer=dynagatewaytypes_dot_query__pb2.WideColumnTableFetchReq.FromString,
          response_serializer=dynagatewaytypes_dot_query__pb2.WideColumnTableFetchRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dynagatewaytypes.QueryService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
