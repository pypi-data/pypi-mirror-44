# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkFFTPadPositiveIndexImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkFFTPadPositiveIndexImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkFFTPadPositiveIndexImageFilterPython
            return _itkFFTPadPositiveIndexImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkFFTPadPositiveIndexImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkFFTPadPositiveIndexImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkFFTPadPositiveIndexImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterAPython
import itkImageRegionPython
import ITKCommonBasePython
import pyBasePython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkImageToImageFilterCommonPython
import itkImagePython
import itkMatrixPython
import itkCovariantVectorPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_matrix_fixedPython
import itkPointPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkSymmetricSecondRankTensorPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterBPython
import itkImageBoundaryConditionPython

def itkFFTPadPositiveIndexImageFilterICF3_New():
  return itkFFTPadPositiveIndexImageFilterICF3.New()


def itkFFTPadPositiveIndexImageFilterICF2_New():
  return itkFFTPadPositiveIndexImageFilterICF2.New()


def itkFFTPadPositiveIndexImageFilterIF3_New():
  return itkFFTPadPositiveIndexImageFilterIF3.New()


def itkFFTPadPositiveIndexImageFilterIF2_New():
  return itkFFTPadPositiveIndexImageFilterIF2.New()


def itkFFTPadPositiveIndexImageFilterIUS3_New():
  return itkFFTPadPositiveIndexImageFilterIUS3.New()


def itkFFTPadPositiveIndexImageFilterIUS2_New():
  return itkFFTPadPositiveIndexImageFilterIUS2.New()


def itkFFTPadPositiveIndexImageFilterIUC3_New():
  return itkFFTPadPositiveIndexImageFilterIUC3.New()


def itkFFTPadPositiveIndexImageFilterIUC2_New():
  return itkFFTPadPositiveIndexImageFilterIUC2.New()


def itkFFTPadPositiveIndexImageFilterISS3_New():
  return itkFFTPadPositiveIndexImageFilterISS3.New()


def itkFFTPadPositiveIndexImageFilterISS2_New():
  return itkFFTPadPositiveIndexImageFilterISS2.New()


def itkFFTPadPositiveIndexImageFilterICVF43_New():
  return itkFFTPadPositiveIndexImageFilterICVF43.New()


def itkFFTPadPositiveIndexImageFilterICVF42_New():
  return itkFFTPadPositiveIndexImageFilterICVF42.New()


def itkFFTPadPositiveIndexImageFilterICVF33_New():
  return itkFFTPadPositiveIndexImageFilterICVF33.New()


def itkFFTPadPositiveIndexImageFilterICVF32_New():
  return itkFFTPadPositiveIndexImageFilterICVF32.New()


def itkFFTPadPositiveIndexImageFilterICVF23_New():
  return itkFFTPadPositiveIndexImageFilterICVF23.New()


def itkFFTPadPositiveIndexImageFilterICVF22_New():
  return itkFFTPadPositiveIndexImageFilterICVF22.New()


def itkFFTPadPositiveIndexImageFilterIVF43_New():
  return itkFFTPadPositiveIndexImageFilterIVF43.New()


def itkFFTPadPositiveIndexImageFilterIVF42_New():
  return itkFFTPadPositiveIndexImageFilterIVF42.New()


def itkFFTPadPositiveIndexImageFilterIVF33_New():
  return itkFFTPadPositiveIndexImageFilterIVF33.New()


def itkFFTPadPositiveIndexImageFilterIVF32_New():
  return itkFFTPadPositiveIndexImageFilterIVF32.New()


def itkFFTPadPositiveIndexImageFilterIVF23_New():
  return itkFFTPadPositiveIndexImageFilterIVF23.New()


def itkFFTPadPositiveIndexImageFilterIVF22_New():
  return itkFFTPadPositiveIndexImageFilterIVF22.New()


def itkFFTPadPositiveIndexImageFilterIRGBAUC3_New():
  return itkFFTPadPositiveIndexImageFilterIRGBAUC3.New()


def itkFFTPadPositiveIndexImageFilterIRGBAUC2_New():
  return itkFFTPadPositiveIndexImageFilterIRGBAUC2.New()


def itkFFTPadPositiveIndexImageFilterIRGBUC3_New():
  return itkFFTPadPositiveIndexImageFilterIRGBUC3.New()


def itkFFTPadPositiveIndexImageFilterIRGBUC2_New():
  return itkFFTPadPositiveIndexImageFilterIRGBUC2.New()

class itkFFTPadPositiveIndexImageFilterICF2(itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterICF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterICF2_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterICF2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterICF2_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterICF2 self) -> itkFFTPadPositiveIndexImageFilterICF2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICF2 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICF2 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionICF2 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICF2 self) -> itkImageBoundaryConditionICF2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionICF2') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICF2 self, itkImageBoundaryConditionICF2 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterICF2 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'stdcomplexF') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterICF2 self, stdcomplexF boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterICF2 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterICF2

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICF2 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICF2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterICF2

        Create a new object of the class itkFFTPadPositiveIndexImageFilterICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterICF2.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_Clone, None, itkFFTPadPositiveIndexImageFilterICF2)
itkFFTPadPositiveIndexImageFilterICF2.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICF2)
itkFFTPadPositiveIndexImageFilterICF2.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICF2)
itkFFTPadPositiveIndexImageFilterICF2.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICF2)
itkFFTPadPositiveIndexImageFilterICF2.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICF2)
itkFFTPadPositiveIndexImageFilterICF2.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterICF2)
itkFFTPadPositiveIndexImageFilterICF2.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterICF2)
itkFFTPadPositiveIndexImageFilterICF2.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterICF2)
itkFFTPadPositiveIndexImageFilterICF2_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_swigregister
itkFFTPadPositiveIndexImageFilterICF2_swigregister(itkFFTPadPositiveIndexImageFilterICF2)

def itkFFTPadPositiveIndexImageFilterICF2___New_orig__() -> "itkFFTPadPositiveIndexImageFilterICF2_Pointer":
    """itkFFTPadPositiveIndexImageFilterICF2___New_orig__() -> itkFFTPadPositiveIndexImageFilterICF2_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2___New_orig__()

def itkFFTPadPositiveIndexImageFilterICF2_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICF2 *":
    """itkFFTPadPositiveIndexImageFilterICF2_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICF2"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF2_cast(obj)

class itkFFTPadPositiveIndexImageFilterICF3(itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterICF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterICF3_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterICF3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterICF3_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterICF3 self) -> itkFFTPadPositiveIndexImageFilterICF3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICF3 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICF3 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionICF3 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICF3 self) -> itkImageBoundaryConditionICF3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionICF3') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICF3 self, itkImageBoundaryConditionICF3 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterICF3 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'stdcomplexF') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterICF3 self, stdcomplexF boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterICF3 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterICF3

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICF3 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICF3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterICF3

        Create a new object of the class itkFFTPadPositiveIndexImageFilterICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterICF3.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_Clone, None, itkFFTPadPositiveIndexImageFilterICF3)
itkFFTPadPositiveIndexImageFilterICF3.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICF3)
itkFFTPadPositiveIndexImageFilterICF3.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICF3)
itkFFTPadPositiveIndexImageFilterICF3.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICF3)
itkFFTPadPositiveIndexImageFilterICF3.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICF3)
itkFFTPadPositiveIndexImageFilterICF3.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterICF3)
itkFFTPadPositiveIndexImageFilterICF3.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterICF3)
itkFFTPadPositiveIndexImageFilterICF3.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterICF3)
itkFFTPadPositiveIndexImageFilterICF3_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_swigregister
itkFFTPadPositiveIndexImageFilterICF3_swigregister(itkFFTPadPositiveIndexImageFilterICF3)

def itkFFTPadPositiveIndexImageFilterICF3___New_orig__() -> "itkFFTPadPositiveIndexImageFilterICF3_Pointer":
    """itkFFTPadPositiveIndexImageFilterICF3___New_orig__() -> itkFFTPadPositiveIndexImageFilterICF3_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3___New_orig__()

def itkFFTPadPositiveIndexImageFilterICF3_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICF3 *":
    """itkFFTPadPositiveIndexImageFilterICF3_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICF3"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICF3_cast(obj)

class itkFFTPadPositiveIndexImageFilterICVF22(itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterICVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterICVF22_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterICVF22_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterICVF22_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterICVF22 self) -> itkFFTPadPositiveIndexImageFilterICVF22_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICVF22 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICVF22 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionICVF22 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICVF22 self) -> itkImageBoundaryConditionICVF22"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionICVF22') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICVF22 self, itkImageBoundaryConditionICVF22 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterICVF22 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkCovariantVectorF2') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterICVF22 self, itkCovariantVectorF2 boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterICVF22 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterICVF22

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICVF22 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICVF22"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterICVF22

        Create a new object of the class itkFFTPadPositiveIndexImageFilterICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterICVF22.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_Clone, None, itkFFTPadPositiveIndexImageFilterICVF22)
itkFFTPadPositiveIndexImageFilterICVF22.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICVF22)
itkFFTPadPositiveIndexImageFilterICVF22.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICVF22)
itkFFTPadPositiveIndexImageFilterICVF22.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICVF22)
itkFFTPadPositiveIndexImageFilterICVF22.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICVF22)
itkFFTPadPositiveIndexImageFilterICVF22.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterICVF22)
itkFFTPadPositiveIndexImageFilterICVF22.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterICVF22)
itkFFTPadPositiveIndexImageFilterICVF22.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterICVF22)
itkFFTPadPositiveIndexImageFilterICVF22_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_swigregister
itkFFTPadPositiveIndexImageFilterICVF22_swigregister(itkFFTPadPositiveIndexImageFilterICVF22)

def itkFFTPadPositiveIndexImageFilterICVF22___New_orig__() -> "itkFFTPadPositiveIndexImageFilterICVF22_Pointer":
    """itkFFTPadPositiveIndexImageFilterICVF22___New_orig__() -> itkFFTPadPositiveIndexImageFilterICVF22_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22___New_orig__()

def itkFFTPadPositiveIndexImageFilterICVF22_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICVF22 *":
    """itkFFTPadPositiveIndexImageFilterICVF22_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICVF22"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF22_cast(obj)

class itkFFTPadPositiveIndexImageFilterICVF23(itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterICVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterICVF23_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterICVF23_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterICVF23_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterICVF23 self) -> itkFFTPadPositiveIndexImageFilterICVF23_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICVF23 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICVF23 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionICVF23 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICVF23 self) -> itkImageBoundaryConditionICVF23"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionICVF23') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICVF23 self, itkImageBoundaryConditionICVF23 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterICVF23 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkCovariantVectorF2') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterICVF23 self, itkCovariantVectorF2 boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterICVF23 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterICVF23

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICVF23 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICVF23"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterICVF23

        Create a new object of the class itkFFTPadPositiveIndexImageFilterICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterICVF23.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_Clone, None, itkFFTPadPositiveIndexImageFilterICVF23)
itkFFTPadPositiveIndexImageFilterICVF23.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICVF23)
itkFFTPadPositiveIndexImageFilterICVF23.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICVF23)
itkFFTPadPositiveIndexImageFilterICVF23.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICVF23)
itkFFTPadPositiveIndexImageFilterICVF23.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICVF23)
itkFFTPadPositiveIndexImageFilterICVF23.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterICVF23)
itkFFTPadPositiveIndexImageFilterICVF23.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterICVF23)
itkFFTPadPositiveIndexImageFilterICVF23.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterICVF23)
itkFFTPadPositiveIndexImageFilterICVF23_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_swigregister
itkFFTPadPositiveIndexImageFilterICVF23_swigregister(itkFFTPadPositiveIndexImageFilterICVF23)

def itkFFTPadPositiveIndexImageFilterICVF23___New_orig__() -> "itkFFTPadPositiveIndexImageFilterICVF23_Pointer":
    """itkFFTPadPositiveIndexImageFilterICVF23___New_orig__() -> itkFFTPadPositiveIndexImageFilterICVF23_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23___New_orig__()

def itkFFTPadPositiveIndexImageFilterICVF23_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICVF23 *":
    """itkFFTPadPositiveIndexImageFilterICVF23_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICVF23"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF23_cast(obj)

class itkFFTPadPositiveIndexImageFilterICVF32(itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterICVF32 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterICVF32_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterICVF32_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterICVF32_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterICVF32 self) -> itkFFTPadPositiveIndexImageFilterICVF32_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICVF32 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICVF32 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionICVF32 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICVF32 self) -> itkImageBoundaryConditionICVF32"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionICVF32') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICVF32 self, itkImageBoundaryConditionICVF32 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterICVF32 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkCovariantVectorF3') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterICVF32 self, itkCovariantVectorF3 boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterICVF32 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterICVF32

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICVF32 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICVF32"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterICVF32

        Create a new object of the class itkFFTPadPositiveIndexImageFilterICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterICVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterICVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterICVF32.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_Clone, None, itkFFTPadPositiveIndexImageFilterICVF32)
itkFFTPadPositiveIndexImageFilterICVF32.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICVF32)
itkFFTPadPositiveIndexImageFilterICVF32.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICVF32)
itkFFTPadPositiveIndexImageFilterICVF32.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICVF32)
itkFFTPadPositiveIndexImageFilterICVF32.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICVF32)
itkFFTPadPositiveIndexImageFilterICVF32.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterICVF32)
itkFFTPadPositiveIndexImageFilterICVF32.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterICVF32)
itkFFTPadPositiveIndexImageFilterICVF32.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterICVF32)
itkFFTPadPositiveIndexImageFilterICVF32_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_swigregister
itkFFTPadPositiveIndexImageFilterICVF32_swigregister(itkFFTPadPositiveIndexImageFilterICVF32)

def itkFFTPadPositiveIndexImageFilterICVF32___New_orig__() -> "itkFFTPadPositiveIndexImageFilterICVF32_Pointer":
    """itkFFTPadPositiveIndexImageFilterICVF32___New_orig__() -> itkFFTPadPositiveIndexImageFilterICVF32_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32___New_orig__()

def itkFFTPadPositiveIndexImageFilterICVF32_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICVF32 *":
    """itkFFTPadPositiveIndexImageFilterICVF32_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICVF32"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF32_cast(obj)

class itkFFTPadPositiveIndexImageFilterICVF33(itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterICVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterICVF33_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterICVF33_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterICVF33_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterICVF33 self) -> itkFFTPadPositiveIndexImageFilterICVF33_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICVF33 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICVF33 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionICVF33 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICVF33 self) -> itkImageBoundaryConditionICVF33"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionICVF33') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICVF33 self, itkImageBoundaryConditionICVF33 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterICVF33 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkCovariantVectorF3') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterICVF33 self, itkCovariantVectorF3 boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterICVF33 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterICVF33

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICVF33 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICVF33"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterICVF33

        Create a new object of the class itkFFTPadPositiveIndexImageFilterICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterICVF33.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_Clone, None, itkFFTPadPositiveIndexImageFilterICVF33)
itkFFTPadPositiveIndexImageFilterICVF33.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICVF33)
itkFFTPadPositiveIndexImageFilterICVF33.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICVF33)
itkFFTPadPositiveIndexImageFilterICVF33.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICVF33)
itkFFTPadPositiveIndexImageFilterICVF33.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICVF33)
itkFFTPadPositiveIndexImageFilterICVF33.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterICVF33)
itkFFTPadPositiveIndexImageFilterICVF33.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterICVF33)
itkFFTPadPositiveIndexImageFilterICVF33.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterICVF33)
itkFFTPadPositiveIndexImageFilterICVF33_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_swigregister
itkFFTPadPositiveIndexImageFilterICVF33_swigregister(itkFFTPadPositiveIndexImageFilterICVF33)

def itkFFTPadPositiveIndexImageFilterICVF33___New_orig__() -> "itkFFTPadPositiveIndexImageFilterICVF33_Pointer":
    """itkFFTPadPositiveIndexImageFilterICVF33___New_orig__() -> itkFFTPadPositiveIndexImageFilterICVF33_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33___New_orig__()

def itkFFTPadPositiveIndexImageFilterICVF33_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICVF33 *":
    """itkFFTPadPositiveIndexImageFilterICVF33_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICVF33"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF33_cast(obj)

class itkFFTPadPositiveIndexImageFilterICVF42(itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterICVF42 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterICVF42_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterICVF42_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterICVF42_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterICVF42 self) -> itkFFTPadPositiveIndexImageFilterICVF42_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICVF42 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICVF42 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionICVF42 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICVF42 self) -> itkImageBoundaryConditionICVF42"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionICVF42') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICVF42 self, itkImageBoundaryConditionICVF42 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterICVF42 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkCovariantVectorF4') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterICVF42 self, itkCovariantVectorF4 boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterICVF42 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterICVF42

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICVF42 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICVF42"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterICVF42

        Create a new object of the class itkFFTPadPositiveIndexImageFilterICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterICVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterICVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterICVF42.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_Clone, None, itkFFTPadPositiveIndexImageFilterICVF42)
itkFFTPadPositiveIndexImageFilterICVF42.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICVF42)
itkFFTPadPositiveIndexImageFilterICVF42.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICVF42)
itkFFTPadPositiveIndexImageFilterICVF42.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICVF42)
itkFFTPadPositiveIndexImageFilterICVF42.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICVF42)
itkFFTPadPositiveIndexImageFilterICVF42.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterICVF42)
itkFFTPadPositiveIndexImageFilterICVF42.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterICVF42)
itkFFTPadPositiveIndexImageFilterICVF42.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterICVF42)
itkFFTPadPositiveIndexImageFilterICVF42_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_swigregister
itkFFTPadPositiveIndexImageFilterICVF42_swigregister(itkFFTPadPositiveIndexImageFilterICVF42)

def itkFFTPadPositiveIndexImageFilterICVF42___New_orig__() -> "itkFFTPadPositiveIndexImageFilterICVF42_Pointer":
    """itkFFTPadPositiveIndexImageFilterICVF42___New_orig__() -> itkFFTPadPositiveIndexImageFilterICVF42_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42___New_orig__()

def itkFFTPadPositiveIndexImageFilterICVF42_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICVF42 *":
    """itkFFTPadPositiveIndexImageFilterICVF42_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICVF42"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF42_cast(obj)

class itkFFTPadPositiveIndexImageFilterICVF43(itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterICVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterICVF43_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterICVF43_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterICVF43_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterICVF43 self) -> itkFFTPadPositiveIndexImageFilterICVF43_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICVF43 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterICVF43 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionICVF43 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICVF43 self) -> itkImageBoundaryConditionICVF43"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionICVF43') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterICVF43 self, itkImageBoundaryConditionICVF43 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterICVF43 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkCovariantVectorF4') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterICVF43 self, itkCovariantVectorF4 boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterICVF43 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterICVF43

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICVF43 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICVF43"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterICVF43

        Create a new object of the class itkFFTPadPositiveIndexImageFilterICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterICVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterICVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterICVF43.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_Clone, None, itkFFTPadPositiveIndexImageFilterICVF43)
itkFFTPadPositiveIndexImageFilterICVF43.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICVF43)
itkFFTPadPositiveIndexImageFilterICVF43.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterICVF43)
itkFFTPadPositiveIndexImageFilterICVF43.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICVF43)
itkFFTPadPositiveIndexImageFilterICVF43.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterICVF43)
itkFFTPadPositiveIndexImageFilterICVF43.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterICVF43)
itkFFTPadPositiveIndexImageFilterICVF43.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterICVF43)
itkFFTPadPositiveIndexImageFilterICVF43.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterICVF43)
itkFFTPadPositiveIndexImageFilterICVF43_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_swigregister
itkFFTPadPositiveIndexImageFilterICVF43_swigregister(itkFFTPadPositiveIndexImageFilterICVF43)

def itkFFTPadPositiveIndexImageFilterICVF43___New_orig__() -> "itkFFTPadPositiveIndexImageFilterICVF43_Pointer":
    """itkFFTPadPositiveIndexImageFilterICVF43___New_orig__() -> itkFFTPadPositiveIndexImageFilterICVF43_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43___New_orig__()

def itkFFTPadPositiveIndexImageFilterICVF43_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterICVF43 *":
    """itkFFTPadPositiveIndexImageFilterICVF43_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterICVF43"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterICVF43_cast(obj)

class itkFFTPadPositiveIndexImageFilterIF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIF2_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIF2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIF2_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIF2 self) -> itkFFTPadPositiveIndexImageFilterIF2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIF2 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIF2 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIF2 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIF2 self) -> itkImageBoundaryConditionIF2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIF2') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIF2 self, itkImageBoundaryConditionIF2 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIF2 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'float const &') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIF2 self, float const & boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIF2 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIF2

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIF2 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIF2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIF2

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIF2.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_Clone, None, itkFFTPadPositiveIndexImageFilterIF2)
itkFFTPadPositiveIndexImageFilterIF2.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIF2)
itkFFTPadPositiveIndexImageFilterIF2.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIF2)
itkFFTPadPositiveIndexImageFilterIF2.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIF2)
itkFFTPadPositiveIndexImageFilterIF2.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIF2)
itkFFTPadPositiveIndexImageFilterIF2.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIF2)
itkFFTPadPositiveIndexImageFilterIF2.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIF2)
itkFFTPadPositiveIndexImageFilterIF2.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIF2)
itkFFTPadPositiveIndexImageFilterIF2_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_swigregister
itkFFTPadPositiveIndexImageFilterIF2_swigregister(itkFFTPadPositiveIndexImageFilterIF2)

def itkFFTPadPositiveIndexImageFilterIF2___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIF2_Pointer":
    """itkFFTPadPositiveIndexImageFilterIF2___New_orig__() -> itkFFTPadPositiveIndexImageFilterIF2_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2___New_orig__()

def itkFFTPadPositiveIndexImageFilterIF2_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIF2 *":
    """itkFFTPadPositiveIndexImageFilterIF2_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIF2"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF2_cast(obj)

class itkFFTPadPositiveIndexImageFilterIF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIF3_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIF3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIF3_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIF3 self) -> itkFFTPadPositiveIndexImageFilterIF3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIF3 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIF3 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIF3 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIF3 self) -> itkImageBoundaryConditionIF3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIF3') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIF3 self, itkImageBoundaryConditionIF3 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIF3 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'float const &') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIF3 self, float const & boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIF3 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIF3

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIF3 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIF3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIF3

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIF3.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_Clone, None, itkFFTPadPositiveIndexImageFilterIF3)
itkFFTPadPositiveIndexImageFilterIF3.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIF3)
itkFFTPadPositiveIndexImageFilterIF3.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIF3)
itkFFTPadPositiveIndexImageFilterIF3.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIF3)
itkFFTPadPositiveIndexImageFilterIF3.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIF3)
itkFFTPadPositiveIndexImageFilterIF3.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIF3)
itkFFTPadPositiveIndexImageFilterIF3.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIF3)
itkFFTPadPositiveIndexImageFilterIF3.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIF3)
itkFFTPadPositiveIndexImageFilterIF3_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_swigregister
itkFFTPadPositiveIndexImageFilterIF3_swigregister(itkFFTPadPositiveIndexImageFilterIF3)

def itkFFTPadPositiveIndexImageFilterIF3___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIF3_Pointer":
    """itkFFTPadPositiveIndexImageFilterIF3___New_orig__() -> itkFFTPadPositiveIndexImageFilterIF3_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3___New_orig__()

def itkFFTPadPositiveIndexImageFilterIF3_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIF3 *":
    """itkFFTPadPositiveIndexImageFilterIF3_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIF3"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIF3_cast(obj)

class itkFFTPadPositiveIndexImageFilterIRGBAUC2(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIRGBAUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIRGBAUC2_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIRGBAUC2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIRGBAUC2_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIRGBAUC2 self) -> itkFFTPadPositiveIndexImageFilterIRGBAUC2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIRGBAUC2 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIRGBAUC2 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIRGBAUC2 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIRGBAUC2 self) -> itkImageBoundaryConditionIRGBAUC2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIRGBAUC2') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIRGBAUC2 self, itkImageBoundaryConditionIRGBAUC2 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIRGBAUC2 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkRGBAPixelUC') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIRGBAUC2 self, itkRGBAPixelUC boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIRGBAUC2 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIRGBAUC2

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIRGBAUC2 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIRGBAUC2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIRGBAUC2

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIRGBAUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIRGBAUC2.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_Clone, None, itkFFTPadPositiveIndexImageFilterIRGBAUC2)
itkFFTPadPositiveIndexImageFilterIRGBAUC2.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIRGBAUC2)
itkFFTPadPositiveIndexImageFilterIRGBAUC2.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIRGBAUC2)
itkFFTPadPositiveIndexImageFilterIRGBAUC2.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIRGBAUC2)
itkFFTPadPositiveIndexImageFilterIRGBAUC2.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIRGBAUC2)
itkFFTPadPositiveIndexImageFilterIRGBAUC2.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIRGBAUC2)
itkFFTPadPositiveIndexImageFilterIRGBAUC2.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIRGBAUC2)
itkFFTPadPositiveIndexImageFilterIRGBAUC2.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIRGBAUC2)
itkFFTPadPositiveIndexImageFilterIRGBAUC2_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_swigregister
itkFFTPadPositiveIndexImageFilterIRGBAUC2_swigregister(itkFFTPadPositiveIndexImageFilterIRGBAUC2)

def itkFFTPadPositiveIndexImageFilterIRGBAUC2___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIRGBAUC2_Pointer":
    """itkFFTPadPositiveIndexImageFilterIRGBAUC2___New_orig__() -> itkFFTPadPositiveIndexImageFilterIRGBAUC2_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2___New_orig__()

def itkFFTPadPositiveIndexImageFilterIRGBAUC2_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIRGBAUC2 *":
    """itkFFTPadPositiveIndexImageFilterIRGBAUC2_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIRGBAUC2"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC2_cast(obj)

class itkFFTPadPositiveIndexImageFilterIRGBAUC3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIRGBAUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIRGBAUC3_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIRGBAUC3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIRGBAUC3_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIRGBAUC3 self) -> itkFFTPadPositiveIndexImageFilterIRGBAUC3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIRGBAUC3 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIRGBAUC3 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIRGBAUC3 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIRGBAUC3 self) -> itkImageBoundaryConditionIRGBAUC3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIRGBAUC3') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIRGBAUC3 self, itkImageBoundaryConditionIRGBAUC3 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIRGBAUC3 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkRGBAPixelUC') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIRGBAUC3 self, itkRGBAPixelUC boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIRGBAUC3 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIRGBAUC3

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIRGBAUC3 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIRGBAUC3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIRGBAUC3

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIRGBAUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIRGBAUC3.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_Clone, None, itkFFTPadPositiveIndexImageFilterIRGBAUC3)
itkFFTPadPositiveIndexImageFilterIRGBAUC3.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIRGBAUC3)
itkFFTPadPositiveIndexImageFilterIRGBAUC3.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIRGBAUC3)
itkFFTPadPositiveIndexImageFilterIRGBAUC3.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIRGBAUC3)
itkFFTPadPositiveIndexImageFilterIRGBAUC3.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIRGBAUC3)
itkFFTPadPositiveIndexImageFilterIRGBAUC3.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIRGBAUC3)
itkFFTPadPositiveIndexImageFilterIRGBAUC3.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIRGBAUC3)
itkFFTPadPositiveIndexImageFilterIRGBAUC3.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIRGBAUC3)
itkFFTPadPositiveIndexImageFilterIRGBAUC3_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_swigregister
itkFFTPadPositiveIndexImageFilterIRGBAUC3_swigregister(itkFFTPadPositiveIndexImageFilterIRGBAUC3)

def itkFFTPadPositiveIndexImageFilterIRGBAUC3___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIRGBAUC3_Pointer":
    """itkFFTPadPositiveIndexImageFilterIRGBAUC3___New_orig__() -> itkFFTPadPositiveIndexImageFilterIRGBAUC3_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3___New_orig__()

def itkFFTPadPositiveIndexImageFilterIRGBAUC3_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIRGBAUC3 *":
    """itkFFTPadPositiveIndexImageFilterIRGBAUC3_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIRGBAUC3"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBAUC3_cast(obj)

class itkFFTPadPositiveIndexImageFilterIRGBUC2(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIRGBUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIRGBUC2_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIRGBUC2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIRGBUC2_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIRGBUC2 self) -> itkFFTPadPositiveIndexImageFilterIRGBUC2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIRGBUC2 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIRGBUC2 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIRGBUC2 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIRGBUC2 self) -> itkImageBoundaryConditionIRGBUC2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIRGBUC2') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIRGBUC2 self, itkImageBoundaryConditionIRGBUC2 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIRGBUC2 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkRGBPixelUC') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIRGBUC2 self, itkRGBPixelUC boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIRGBUC2 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIRGBUC2

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIRGBUC2 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIRGBUC2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIRGBUC2

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIRGBUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIRGBUC2.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_Clone, None, itkFFTPadPositiveIndexImageFilterIRGBUC2)
itkFFTPadPositiveIndexImageFilterIRGBUC2.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIRGBUC2)
itkFFTPadPositiveIndexImageFilterIRGBUC2.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIRGBUC2)
itkFFTPadPositiveIndexImageFilterIRGBUC2.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIRGBUC2)
itkFFTPadPositiveIndexImageFilterIRGBUC2.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIRGBUC2)
itkFFTPadPositiveIndexImageFilterIRGBUC2.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIRGBUC2)
itkFFTPadPositiveIndexImageFilterIRGBUC2.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIRGBUC2)
itkFFTPadPositiveIndexImageFilterIRGBUC2.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIRGBUC2)
itkFFTPadPositiveIndexImageFilterIRGBUC2_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_swigregister
itkFFTPadPositiveIndexImageFilterIRGBUC2_swigregister(itkFFTPadPositiveIndexImageFilterIRGBUC2)

def itkFFTPadPositiveIndexImageFilterIRGBUC2___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIRGBUC2_Pointer":
    """itkFFTPadPositiveIndexImageFilterIRGBUC2___New_orig__() -> itkFFTPadPositiveIndexImageFilterIRGBUC2_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2___New_orig__()

def itkFFTPadPositiveIndexImageFilterIRGBUC2_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIRGBUC2 *":
    """itkFFTPadPositiveIndexImageFilterIRGBUC2_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIRGBUC2"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC2_cast(obj)

class itkFFTPadPositiveIndexImageFilterIRGBUC3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIRGBUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIRGBUC3_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIRGBUC3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIRGBUC3_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIRGBUC3 self) -> itkFFTPadPositiveIndexImageFilterIRGBUC3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIRGBUC3 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIRGBUC3 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIRGBUC3 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIRGBUC3 self) -> itkImageBoundaryConditionIRGBUC3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIRGBUC3') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIRGBUC3 self, itkImageBoundaryConditionIRGBUC3 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIRGBUC3 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkRGBPixelUC') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIRGBUC3 self, itkRGBPixelUC boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIRGBUC3 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIRGBUC3

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIRGBUC3 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIRGBUC3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIRGBUC3

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIRGBUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIRGBUC3.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_Clone, None, itkFFTPadPositiveIndexImageFilterIRGBUC3)
itkFFTPadPositiveIndexImageFilterIRGBUC3.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIRGBUC3)
itkFFTPadPositiveIndexImageFilterIRGBUC3.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIRGBUC3)
itkFFTPadPositiveIndexImageFilterIRGBUC3.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIRGBUC3)
itkFFTPadPositiveIndexImageFilterIRGBUC3.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIRGBUC3)
itkFFTPadPositiveIndexImageFilterIRGBUC3.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIRGBUC3)
itkFFTPadPositiveIndexImageFilterIRGBUC3.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIRGBUC3)
itkFFTPadPositiveIndexImageFilterIRGBUC3.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIRGBUC3)
itkFFTPadPositiveIndexImageFilterIRGBUC3_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_swigregister
itkFFTPadPositiveIndexImageFilterIRGBUC3_swigregister(itkFFTPadPositiveIndexImageFilterIRGBUC3)

def itkFFTPadPositiveIndexImageFilterIRGBUC3___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIRGBUC3_Pointer":
    """itkFFTPadPositiveIndexImageFilterIRGBUC3___New_orig__() -> itkFFTPadPositiveIndexImageFilterIRGBUC3_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3___New_orig__()

def itkFFTPadPositiveIndexImageFilterIRGBUC3_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIRGBUC3 *":
    """itkFFTPadPositiveIndexImageFilterIRGBUC3_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIRGBUC3"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIRGBUC3_cast(obj)

class itkFFTPadPositiveIndexImageFilterISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterISS2_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterISS2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterISS2_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterISS2 self) -> itkFFTPadPositiveIndexImageFilterISS2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterISS2 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterISS2 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionISS2 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterISS2 self) -> itkImageBoundaryConditionISS2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionISS2') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterISS2 self, itkImageBoundaryConditionISS2 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterISS2 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'short const &') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterISS2 self, short const & boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterISS2 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterISS2

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterISS2 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterISS2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterISS2

        Create a new object of the class itkFFTPadPositiveIndexImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterISS2.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_Clone, None, itkFFTPadPositiveIndexImageFilterISS2)
itkFFTPadPositiveIndexImageFilterISS2.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterISS2)
itkFFTPadPositiveIndexImageFilterISS2.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterISS2)
itkFFTPadPositiveIndexImageFilterISS2.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterISS2)
itkFFTPadPositiveIndexImageFilterISS2.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterISS2)
itkFFTPadPositiveIndexImageFilterISS2.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterISS2)
itkFFTPadPositiveIndexImageFilterISS2.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterISS2)
itkFFTPadPositiveIndexImageFilterISS2.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterISS2)
itkFFTPadPositiveIndexImageFilterISS2_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_swigregister
itkFFTPadPositiveIndexImageFilterISS2_swigregister(itkFFTPadPositiveIndexImageFilterISS2)

def itkFFTPadPositiveIndexImageFilterISS2___New_orig__() -> "itkFFTPadPositiveIndexImageFilterISS2_Pointer":
    """itkFFTPadPositiveIndexImageFilterISS2___New_orig__() -> itkFFTPadPositiveIndexImageFilterISS2_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2___New_orig__()

def itkFFTPadPositiveIndexImageFilterISS2_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterISS2 *":
    """itkFFTPadPositiveIndexImageFilterISS2_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterISS2"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS2_cast(obj)

class itkFFTPadPositiveIndexImageFilterISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterISS3_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterISS3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterISS3_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterISS3 self) -> itkFFTPadPositiveIndexImageFilterISS3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterISS3 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterISS3 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionISS3 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterISS3 self) -> itkImageBoundaryConditionISS3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionISS3') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterISS3 self, itkImageBoundaryConditionISS3 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterISS3 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'short const &') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterISS3 self, short const & boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterISS3 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterISS3

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterISS3 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterISS3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterISS3

        Create a new object of the class itkFFTPadPositiveIndexImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterISS3.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_Clone, None, itkFFTPadPositiveIndexImageFilterISS3)
itkFFTPadPositiveIndexImageFilterISS3.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterISS3)
itkFFTPadPositiveIndexImageFilterISS3.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterISS3)
itkFFTPadPositiveIndexImageFilterISS3.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterISS3)
itkFFTPadPositiveIndexImageFilterISS3.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterISS3)
itkFFTPadPositiveIndexImageFilterISS3.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterISS3)
itkFFTPadPositiveIndexImageFilterISS3.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterISS3)
itkFFTPadPositiveIndexImageFilterISS3.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterISS3)
itkFFTPadPositiveIndexImageFilterISS3_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_swigregister
itkFFTPadPositiveIndexImageFilterISS3_swigregister(itkFFTPadPositiveIndexImageFilterISS3)

def itkFFTPadPositiveIndexImageFilterISS3___New_orig__() -> "itkFFTPadPositiveIndexImageFilterISS3_Pointer":
    """itkFFTPadPositiveIndexImageFilterISS3___New_orig__() -> itkFFTPadPositiveIndexImageFilterISS3_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3___New_orig__()

def itkFFTPadPositiveIndexImageFilterISS3_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterISS3 *":
    """itkFFTPadPositiveIndexImageFilterISS3_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterISS3"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterISS3_cast(obj)

class itkFFTPadPositiveIndexImageFilterIUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIUC2_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIUC2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIUC2_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIUC2 self) -> itkFFTPadPositiveIndexImageFilterIUC2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIUC2 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIUC2 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIUC2 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIUC2 self) -> itkImageBoundaryConditionIUC2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIUC2') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIUC2 self, itkImageBoundaryConditionIUC2 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIUC2 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'unsigned char const &') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIUC2 self, unsigned char const & boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIUC2 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIUC2

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIUC2 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIUC2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIUC2

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIUC2.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_Clone, None, itkFFTPadPositiveIndexImageFilterIUC2)
itkFFTPadPositiveIndexImageFilterIUC2.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIUC2)
itkFFTPadPositiveIndexImageFilterIUC2.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIUC2)
itkFFTPadPositiveIndexImageFilterIUC2.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIUC2)
itkFFTPadPositiveIndexImageFilterIUC2.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIUC2)
itkFFTPadPositiveIndexImageFilterIUC2.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIUC2)
itkFFTPadPositiveIndexImageFilterIUC2.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIUC2)
itkFFTPadPositiveIndexImageFilterIUC2.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIUC2)
itkFFTPadPositiveIndexImageFilterIUC2_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_swigregister
itkFFTPadPositiveIndexImageFilterIUC2_swigregister(itkFFTPadPositiveIndexImageFilterIUC2)

def itkFFTPadPositiveIndexImageFilterIUC2___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIUC2_Pointer":
    """itkFFTPadPositiveIndexImageFilterIUC2___New_orig__() -> itkFFTPadPositiveIndexImageFilterIUC2_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2___New_orig__()

def itkFFTPadPositiveIndexImageFilterIUC2_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIUC2 *":
    """itkFFTPadPositiveIndexImageFilterIUC2_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIUC2"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC2_cast(obj)

class itkFFTPadPositiveIndexImageFilterIUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIUC3_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIUC3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIUC3_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIUC3 self) -> itkFFTPadPositiveIndexImageFilterIUC3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIUC3 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIUC3 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIUC3 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIUC3 self) -> itkImageBoundaryConditionIUC3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIUC3') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIUC3 self, itkImageBoundaryConditionIUC3 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIUC3 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'unsigned char const &') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIUC3 self, unsigned char const & boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIUC3 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIUC3

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIUC3 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIUC3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIUC3

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIUC3.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_Clone, None, itkFFTPadPositiveIndexImageFilterIUC3)
itkFFTPadPositiveIndexImageFilterIUC3.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIUC3)
itkFFTPadPositiveIndexImageFilterIUC3.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIUC3)
itkFFTPadPositiveIndexImageFilterIUC3.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIUC3)
itkFFTPadPositiveIndexImageFilterIUC3.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIUC3)
itkFFTPadPositiveIndexImageFilterIUC3.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIUC3)
itkFFTPadPositiveIndexImageFilterIUC3.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIUC3)
itkFFTPadPositiveIndexImageFilterIUC3.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIUC3)
itkFFTPadPositiveIndexImageFilterIUC3_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_swigregister
itkFFTPadPositiveIndexImageFilterIUC3_swigregister(itkFFTPadPositiveIndexImageFilterIUC3)

def itkFFTPadPositiveIndexImageFilterIUC3___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIUC3_Pointer":
    """itkFFTPadPositiveIndexImageFilterIUC3___New_orig__() -> itkFFTPadPositiveIndexImageFilterIUC3_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3___New_orig__()

def itkFFTPadPositiveIndexImageFilterIUC3_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIUC3 *":
    """itkFFTPadPositiveIndexImageFilterIUC3_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIUC3"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUC3_cast(obj)

class itkFFTPadPositiveIndexImageFilterIUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIUS2_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIUS2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIUS2_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIUS2 self) -> itkFFTPadPositiveIndexImageFilterIUS2_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIUS2 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIUS2 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIUS2 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIUS2 self) -> itkImageBoundaryConditionIUS2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIUS2') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIUS2 self, itkImageBoundaryConditionIUS2 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIUS2 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'unsigned short const &') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIUS2 self, unsigned short const & boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIUS2 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIUS2

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIUS2 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIUS2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIUS2

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIUS2.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_Clone, None, itkFFTPadPositiveIndexImageFilterIUS2)
itkFFTPadPositiveIndexImageFilterIUS2.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIUS2)
itkFFTPadPositiveIndexImageFilterIUS2.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIUS2)
itkFFTPadPositiveIndexImageFilterIUS2.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIUS2)
itkFFTPadPositiveIndexImageFilterIUS2.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIUS2)
itkFFTPadPositiveIndexImageFilterIUS2.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIUS2)
itkFFTPadPositiveIndexImageFilterIUS2.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIUS2)
itkFFTPadPositiveIndexImageFilterIUS2.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIUS2)
itkFFTPadPositiveIndexImageFilterIUS2_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_swigregister
itkFFTPadPositiveIndexImageFilterIUS2_swigregister(itkFFTPadPositiveIndexImageFilterIUS2)

def itkFFTPadPositiveIndexImageFilterIUS2___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIUS2_Pointer":
    """itkFFTPadPositiveIndexImageFilterIUS2___New_orig__() -> itkFFTPadPositiveIndexImageFilterIUS2_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2___New_orig__()

def itkFFTPadPositiveIndexImageFilterIUS2_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIUS2 *":
    """itkFFTPadPositiveIndexImageFilterIUS2_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIUS2"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS2_cast(obj)

class itkFFTPadPositiveIndexImageFilterIUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIUS3_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIUS3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIUS3_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIUS3 self) -> itkFFTPadPositiveIndexImageFilterIUS3_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIUS3 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIUS3 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIUS3 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIUS3 self) -> itkImageBoundaryConditionIUS3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIUS3') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIUS3 self, itkImageBoundaryConditionIUS3 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIUS3 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'unsigned short const &') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIUS3 self, unsigned short const & boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIUS3 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIUS3

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIUS3 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIUS3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIUS3

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIUS3.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_Clone, None, itkFFTPadPositiveIndexImageFilterIUS3)
itkFFTPadPositiveIndexImageFilterIUS3.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIUS3)
itkFFTPadPositiveIndexImageFilterIUS3.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIUS3)
itkFFTPadPositiveIndexImageFilterIUS3.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIUS3)
itkFFTPadPositiveIndexImageFilterIUS3.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIUS3)
itkFFTPadPositiveIndexImageFilterIUS3.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIUS3)
itkFFTPadPositiveIndexImageFilterIUS3.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIUS3)
itkFFTPadPositiveIndexImageFilterIUS3.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIUS3)
itkFFTPadPositiveIndexImageFilterIUS3_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_swigregister
itkFFTPadPositiveIndexImageFilterIUS3_swigregister(itkFFTPadPositiveIndexImageFilterIUS3)

def itkFFTPadPositiveIndexImageFilterIUS3___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIUS3_Pointer":
    """itkFFTPadPositiveIndexImageFilterIUS3___New_orig__() -> itkFFTPadPositiveIndexImageFilterIUS3_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3___New_orig__()

def itkFFTPadPositiveIndexImageFilterIUS3_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIUS3 *":
    """itkFFTPadPositiveIndexImageFilterIUS3_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIUS3"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIUS3_cast(obj)

class itkFFTPadPositiveIndexImageFilterIVF22(itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIVF22_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIVF22_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIVF22_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIVF22 self) -> itkFFTPadPositiveIndexImageFilterIVF22_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIVF22 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIVF22 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIVF22 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIVF22 self) -> itkImageBoundaryConditionIVF22"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIVF22') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIVF22 self, itkImageBoundaryConditionIVF22 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIVF22 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkVectorF2') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIVF22 self, itkVectorF2 boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIVF22 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIVF22

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIVF22 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIVF22"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIVF22

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIVF22.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_Clone, None, itkFFTPadPositiveIndexImageFilterIVF22)
itkFFTPadPositiveIndexImageFilterIVF22.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIVF22)
itkFFTPadPositiveIndexImageFilterIVF22.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIVF22)
itkFFTPadPositiveIndexImageFilterIVF22.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIVF22)
itkFFTPadPositiveIndexImageFilterIVF22.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIVF22)
itkFFTPadPositiveIndexImageFilterIVF22.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIVF22)
itkFFTPadPositiveIndexImageFilterIVF22.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIVF22)
itkFFTPadPositiveIndexImageFilterIVF22.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIVF22)
itkFFTPadPositiveIndexImageFilterIVF22_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_swigregister
itkFFTPadPositiveIndexImageFilterIVF22_swigregister(itkFFTPadPositiveIndexImageFilterIVF22)

def itkFFTPadPositiveIndexImageFilterIVF22___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIVF22_Pointer":
    """itkFFTPadPositiveIndexImageFilterIVF22___New_orig__() -> itkFFTPadPositiveIndexImageFilterIVF22_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22___New_orig__()

def itkFFTPadPositiveIndexImageFilterIVF22_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIVF22 *":
    """itkFFTPadPositiveIndexImageFilterIVF22_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIVF22"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF22_cast(obj)

class itkFFTPadPositiveIndexImageFilterIVF23(itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIVF23_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIVF23_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIVF23_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIVF23 self) -> itkFFTPadPositiveIndexImageFilterIVF23_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIVF23 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIVF23 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIVF23 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIVF23 self) -> itkImageBoundaryConditionIVF23"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIVF23') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIVF23 self, itkImageBoundaryConditionIVF23 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIVF23 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkVectorF2') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIVF23 self, itkVectorF2 boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIVF23 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIVF23

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIVF23 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIVF23"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIVF23

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIVF23.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_Clone, None, itkFFTPadPositiveIndexImageFilterIVF23)
itkFFTPadPositiveIndexImageFilterIVF23.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIVF23)
itkFFTPadPositiveIndexImageFilterIVF23.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIVF23)
itkFFTPadPositiveIndexImageFilterIVF23.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIVF23)
itkFFTPadPositiveIndexImageFilterIVF23.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIVF23)
itkFFTPadPositiveIndexImageFilterIVF23.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIVF23)
itkFFTPadPositiveIndexImageFilterIVF23.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIVF23)
itkFFTPadPositiveIndexImageFilterIVF23.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIVF23)
itkFFTPadPositiveIndexImageFilterIVF23_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_swigregister
itkFFTPadPositiveIndexImageFilterIVF23_swigregister(itkFFTPadPositiveIndexImageFilterIVF23)

def itkFFTPadPositiveIndexImageFilterIVF23___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIVF23_Pointer":
    """itkFFTPadPositiveIndexImageFilterIVF23___New_orig__() -> itkFFTPadPositiveIndexImageFilterIVF23_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23___New_orig__()

def itkFFTPadPositiveIndexImageFilterIVF23_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIVF23 *":
    """itkFFTPadPositiveIndexImageFilterIVF23_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIVF23"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF23_cast(obj)

class itkFFTPadPositiveIndexImageFilterIVF32(itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIVF32 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIVF32_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIVF32_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIVF32_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIVF32 self) -> itkFFTPadPositiveIndexImageFilterIVF32_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIVF32 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIVF32 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIVF32 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIVF32 self) -> itkImageBoundaryConditionIVF32"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIVF32') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIVF32 self, itkImageBoundaryConditionIVF32 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIVF32 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkVectorF3') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIVF32 self, itkVectorF3 boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIVF32 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIVF32

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIVF32 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIVF32"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIVF32

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIVF32.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_Clone, None, itkFFTPadPositiveIndexImageFilterIVF32)
itkFFTPadPositiveIndexImageFilterIVF32.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIVF32)
itkFFTPadPositiveIndexImageFilterIVF32.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIVF32)
itkFFTPadPositiveIndexImageFilterIVF32.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIVF32)
itkFFTPadPositiveIndexImageFilterIVF32.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIVF32)
itkFFTPadPositiveIndexImageFilterIVF32.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIVF32)
itkFFTPadPositiveIndexImageFilterIVF32.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIVF32)
itkFFTPadPositiveIndexImageFilterIVF32.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIVF32)
itkFFTPadPositiveIndexImageFilterIVF32_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_swigregister
itkFFTPadPositiveIndexImageFilterIVF32_swigregister(itkFFTPadPositiveIndexImageFilterIVF32)

def itkFFTPadPositiveIndexImageFilterIVF32___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIVF32_Pointer":
    """itkFFTPadPositiveIndexImageFilterIVF32___New_orig__() -> itkFFTPadPositiveIndexImageFilterIVF32_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32___New_orig__()

def itkFFTPadPositiveIndexImageFilterIVF32_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIVF32 *":
    """itkFFTPadPositiveIndexImageFilterIVF32_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIVF32"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF32_cast(obj)

class itkFFTPadPositiveIndexImageFilterIVF33(itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIVF33_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIVF33_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIVF33_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIVF33 self) -> itkFFTPadPositiveIndexImageFilterIVF33_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIVF33 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIVF33 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIVF33 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIVF33 self) -> itkImageBoundaryConditionIVF33"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIVF33') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIVF33 self, itkImageBoundaryConditionIVF33 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIVF33 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkVectorF3') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIVF33 self, itkVectorF3 boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIVF33 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIVF33

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIVF33 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIVF33"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIVF33

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIVF33.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_Clone, None, itkFFTPadPositiveIndexImageFilterIVF33)
itkFFTPadPositiveIndexImageFilterIVF33.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIVF33)
itkFFTPadPositiveIndexImageFilterIVF33.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIVF33)
itkFFTPadPositiveIndexImageFilterIVF33.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIVF33)
itkFFTPadPositiveIndexImageFilterIVF33.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIVF33)
itkFFTPadPositiveIndexImageFilterIVF33.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIVF33)
itkFFTPadPositiveIndexImageFilterIVF33.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIVF33)
itkFFTPadPositiveIndexImageFilterIVF33.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIVF33)
itkFFTPadPositiveIndexImageFilterIVF33_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_swigregister
itkFFTPadPositiveIndexImageFilterIVF33_swigregister(itkFFTPadPositiveIndexImageFilterIVF33)

def itkFFTPadPositiveIndexImageFilterIVF33___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIVF33_Pointer":
    """itkFFTPadPositiveIndexImageFilterIVF33___New_orig__() -> itkFFTPadPositiveIndexImageFilterIVF33_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33___New_orig__()

def itkFFTPadPositiveIndexImageFilterIVF33_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIVF33 *":
    """itkFFTPadPositiveIndexImageFilterIVF33_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIVF33"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF33_cast(obj)

class itkFFTPadPositiveIndexImageFilterIVF42(itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIVF42 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIVF42_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIVF42_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIVF42_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIVF42 self) -> itkFFTPadPositiveIndexImageFilterIVF42_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIVF42 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIVF42 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIVF42 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIVF42 self) -> itkImageBoundaryConditionIVF42"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIVF42') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIVF42 self, itkImageBoundaryConditionIVF42 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize2":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIVF42 self) -> itkSize2"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkVectorF4') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIVF42 self, itkVectorF4 boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIVF42 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIVF42

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIVF42 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIVF42"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIVF42

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIVF42.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_Clone, None, itkFFTPadPositiveIndexImageFilterIVF42)
itkFFTPadPositiveIndexImageFilterIVF42.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIVF42)
itkFFTPadPositiveIndexImageFilterIVF42.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIVF42)
itkFFTPadPositiveIndexImageFilterIVF42.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIVF42)
itkFFTPadPositiveIndexImageFilterIVF42.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIVF42)
itkFFTPadPositiveIndexImageFilterIVF42.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIVF42)
itkFFTPadPositiveIndexImageFilterIVF42.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIVF42)
itkFFTPadPositiveIndexImageFilterIVF42.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIVF42)
itkFFTPadPositiveIndexImageFilterIVF42_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_swigregister
itkFFTPadPositiveIndexImageFilterIVF42_swigregister(itkFFTPadPositiveIndexImageFilterIVF42)

def itkFFTPadPositiveIndexImageFilterIVF42___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIVF42_Pointer":
    """itkFFTPadPositiveIndexImageFilterIVF42___New_orig__() -> itkFFTPadPositiveIndexImageFilterIVF42_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42___New_orig__()

def itkFFTPadPositiveIndexImageFilterIVF42_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIVF42 *":
    """itkFFTPadPositiveIndexImageFilterIVF42_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIVF42"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF42_cast(obj)

class itkFFTPadPositiveIndexImageFilterIVF43(itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43):
    """Proxy of C++ itkFFTPadPositiveIndexImageFilterIVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFFTPadPositiveIndexImageFilterIVF43_Pointer":
        """__New_orig__() -> itkFFTPadPositiveIndexImageFilterIVF43_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFFTPadPositiveIndexImageFilterIVF43_Pointer":
        """Clone(itkFFTPadPositiveIndexImageFilterIVF43 self) -> itkFFTPadPositiveIndexImageFilterIVF43_Pointer"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_Clone(self)


    def GetSizeGreatestPrimeFactor(self) -> "unsigned long":
        """GetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIVF43 self) -> unsigned long"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_GetSizeGreatestPrimeFactor(self)


    def SetSizeGreatestPrimeFactor(self, _arg: 'unsigned long const') -> "void":
        """SetSizeGreatestPrimeFactor(itkFFTPadPositiveIndexImageFilterIVF43 self, unsigned long const _arg)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_SetSizeGreatestPrimeFactor(self, _arg)


    def GetBoundaryCondition(self) -> "itkImageBoundaryConditionIVF43 *":
        """GetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIVF43 self) -> itkImageBoundaryConditionIVF43"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_GetBoundaryCondition(self)


    def SetBoundaryCondition(self, boundaryCondition: 'itkImageBoundaryConditionIVF43') -> "void":
        """SetBoundaryCondition(itkFFTPadPositiveIndexImageFilterIVF43 self, itkImageBoundaryConditionIVF43 boundaryCondition)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_SetBoundaryCondition(self, boundaryCondition)


    def GetHalfPadSize(self) -> "itkSize3":
        """GetHalfPadSize(itkFFTPadPositiveIndexImageFilterIVF43 self) -> itkSize3"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_GetHalfPadSize(self)


    def SetBoundaryConditionToConstant(self, boundaryValue: 'itkVectorF4') -> "void":
        """SetBoundaryConditionToConstant(itkFFTPadPositiveIndexImageFilterIVF43 self, itkVectorF4 boundaryValue)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_SetBoundaryConditionToConstant(self, boundaryValue)


    def SetBoundaryConditionToPeriodic(self) -> "void":
        """SetBoundaryConditionToPeriodic(itkFFTPadPositiveIndexImageFilterIVF43 self)"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_SetBoundaryConditionToPeriodic(self)

    __swig_destroy__ = _itkFFTPadPositiveIndexImageFilterPython.delete_itkFFTPadPositiveIndexImageFilterIVF43

    def cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIVF43 *":
        """cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIVF43"""
        return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadPositiveIndexImageFilterIVF43

        Create a new object of the class itkFFTPadPositiveIndexImageFilterIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadPositiveIndexImageFilterIVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFFTPadPositiveIndexImageFilterIVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFFTPadPositiveIndexImageFilterIVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFFTPadPositiveIndexImageFilterIVF43.Clone = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_Clone, None, itkFFTPadPositiveIndexImageFilterIVF43)
itkFFTPadPositiveIndexImageFilterIVF43.GetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_GetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIVF43)
itkFFTPadPositiveIndexImageFilterIVF43.SetSizeGreatestPrimeFactor = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_SetSizeGreatestPrimeFactor, None, itkFFTPadPositiveIndexImageFilterIVF43)
itkFFTPadPositiveIndexImageFilterIVF43.GetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_GetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIVF43)
itkFFTPadPositiveIndexImageFilterIVF43.SetBoundaryCondition = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_SetBoundaryCondition, None, itkFFTPadPositiveIndexImageFilterIVF43)
itkFFTPadPositiveIndexImageFilterIVF43.GetHalfPadSize = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_GetHalfPadSize, None, itkFFTPadPositiveIndexImageFilterIVF43)
itkFFTPadPositiveIndexImageFilterIVF43.SetBoundaryConditionToConstant = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_SetBoundaryConditionToConstant, None, itkFFTPadPositiveIndexImageFilterIVF43)
itkFFTPadPositiveIndexImageFilterIVF43.SetBoundaryConditionToPeriodic = new_instancemethod(_itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_SetBoundaryConditionToPeriodic, None, itkFFTPadPositiveIndexImageFilterIVF43)
itkFFTPadPositiveIndexImageFilterIVF43_swigregister = _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_swigregister
itkFFTPadPositiveIndexImageFilterIVF43_swigregister(itkFFTPadPositiveIndexImageFilterIVF43)

def itkFFTPadPositiveIndexImageFilterIVF43___New_orig__() -> "itkFFTPadPositiveIndexImageFilterIVF43_Pointer":
    """itkFFTPadPositiveIndexImageFilterIVF43___New_orig__() -> itkFFTPadPositiveIndexImageFilterIVF43_Pointer"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43___New_orig__()

def itkFFTPadPositiveIndexImageFilterIVF43_cast(obj: 'itkLightObject') -> "itkFFTPadPositiveIndexImageFilterIVF43 *":
    """itkFFTPadPositiveIndexImageFilterIVF43_cast(itkLightObject obj) -> itkFFTPadPositiveIndexImageFilterIVF43"""
    return _itkFFTPadPositiveIndexImageFilterPython.itkFFTPadPositiveIndexImageFilterIVF43_cast(obj)


def fft_pad_positive_index_image_filter(*args, **kwargs):
    """Procedural interface for FFTPadPositiveIndexImageFilter"""
    import itk
    return itk.FFTPadPositiveIndexImageFilter.__call__(*args, **kwargs)



