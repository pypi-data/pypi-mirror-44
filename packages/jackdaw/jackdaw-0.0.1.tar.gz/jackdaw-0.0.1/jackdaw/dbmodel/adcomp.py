from . import Basemodel, lf
import datetime
from sqlalchemy.orm import relationship
from sqlalchemy import Column, Integer, String, DateTime, ForeignKey, Boolean

class JackDawADMachine(Basemodel):
	__tablename__ = 'machines'

	# Now for the attributes
	id = Column(Integer, primary_key=True)
	ad_id = Column(Integer, ForeignKey('ads.id'))
	ad = relationship("JackDawADInfo", back_populates="computers")
	fetched_at = Column(DateTime, default=datetime.datetime.utcnow)
	sn = Column(String)
	cn = Column(String)
	distinguishedName = Column(String)
	accountExpires = Column(String)
	badPasswordTime = Column(String)
	badPwdCount = Column(String)
	codePage = Column(String)
	countryCode = Column(String)
	displayName = Column(String)
	dNSHostName = Column(String)
	instanceType = Column(String)
	isCriticalSystemObject = Column(String)
	lastLogoff = Column(String)
	lastLogon = Column(String)
	lastLogonTimestamp = Column(String)
	logonCount = Column(String)
	localPolicyFlags = Column(String)
	supported_enc_types = Column(String)
	name = Column(String)
	nTSecurityDescriptor = Column(String)
	objectCategory = Column(String)
	objectClass = Column(String)
	objectGUID = Column(String)
	objectSid = Column(String)
	operatingSystem = Column(String)
	operatingSystemVersion = Column(String)
	primaryGroupID = Column(String)
	pwdLastSet = Column(String)
	sAMAccountName = Column(String)
	sAMAccountType = Column(String)
	userAccountControl = Column(String)
	whenChanged = Column(String)
	whenCreated = Column(String)
	servicePrincipalName = Column(String)
	
	@staticmethod
	def from_dict(d):
		machine = JackDawADMachine()
		machine.sn = d.get('sn')
		machine.cn = d.get('cn')
		machine.distinguishedName = d.get('distinguishedName')
		machine.accountExpires = d.get('accountExpires')
		machine.badPasswordTime = d.get('badPasswordTime')
		machine.badPwdCount = d.get('badPwdCount')
		machine.codePage = d.get('codePage')
		machine.countryCode = d.get('countryCode')
		machine.displayName = d.get('displayName')
		machine.dNSHostName = d.get('dNSHostName')
		machine.instanceType = d.get('instanceType')
		machine.isCriticalSystemObject = d.get('isCriticalSystemObject')
		machine.lastLogoff = d.get('lastLogoff')
		machine.lastLogon = d.get('lastLogon')
		machine.lastLogonTimestamp = d.get('lastLogonTimestamp')
		machine.logonCount = d.get('logonCount')
		machine.localPolicyFlags = d.get('localPolicyFlags')
		machine.supported_enc_types = d.get('supported_enc_types')
		machine.name = d.get('name')
		machine.nTSecurityDescriptor = d.get('nTSecurityDescriptor')
		machine.objectCategory = d.get('objectCategory')
		machine.objectClass = d.get('objectClass')
		machine.objectGUID = d.get('objectGUID')
		machine.objectSid = d.get('objectSid')
		machine.operatingSystem = d.get('operatingSystem')
		machine.operatingSystemVersion = d.get('operatingSystemVersion')
		machine.primaryGroupID = d.get('primaryGroupID')
		machine.pwdLastSet = d.get('pwdLastSet')
		machine.sAMAccountName = d.get('sAMAccountName')
		machine.sAMAccountType = d.get('sAMAccountType')
		machine.userAccountControl = d.get('userAccountControl')
		machine.whenChanged = d.get('whenChanged')
		machine.whenCreated = d.get('whenCreated')
		machine.servicePrincipalName = d.get('servicePrincipalName')
		return machine