"""ObserveIT Control API"""

import logging
import traceback
from observerit.clients.observeit_login_client import ObserveITLoginClient
from observeit.exceptions import IncompatibleAuth

LOG = logging.getLogger(__name__)


class List(object):
    def __init__(self, client):
        if not isinstance(client, ObserveITLoginClient):
            #Oauth Client not supported
            raise IncompatibleAuth()
        self.client = client
    # end __init__
    
    def create_list(self, list_name, list_type="kind:general", items=None):
        pass

    def add_list_item(self, list_name, item):
        # cache list_name to id mapping
        pass

    def replace_all_list_items(self, list_name, items):
        pass

    def get_list_items(self, list_name):
        pass

    def remove_list_item(self, list_name, item):
        # get and patch the list
        pass

    def start_recording(self, endpoint_name, tag_name, login=None, application_server=None):
        # use the application server passed in, else self.application_server, else fail
        pass

    def stop_recording(self, endpoint_name, login=None, application_server=None):
        # use the application server passed in, else self.application_server, else fail
        pass

    def delete_recording(self, tag_name):
        pass

    def export_session(self, session_id):
        # create a pdf? Dump all images and metadata to a directory?
        # If this works with OAUTH, move to base class
        pass
