#######################################
### instructions for CBL developers ###
#######################################

1) write the doxygen documentation for the new software you want to
   implement (in the proper header file(s))

2) implement the software

3) add the new file(s) in Python/Lib/ required for Swig (if one or
   more new classes are implemented)

4) test the new software on local environment, both in C++ and Python

5) add one or more example codes (updating the Makefile and adding the
   example(s) documentation in Header/Kernel.h)

6) update test.py, adding the command for the new example(s)

7) run the following command:

   ./test.py valgrind new_example1 new_example2 ...

   alternatively, to test all the examples at once, the command is:

   ./test.py valgrind all

   to speed up the test, valgrind can be removed from the above
   commands, and/or one or more of the following options can be added
   (in any order): nocompile nopy nodoc

8) if everything is OK, push the new code into the DIFA git repository!
