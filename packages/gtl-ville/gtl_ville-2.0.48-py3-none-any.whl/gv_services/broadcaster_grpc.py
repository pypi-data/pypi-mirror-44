# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: gv_services/broadcaster.proto
# plugin: grpclib.plugin.main
import abc

import grpclib.const
import grpclib.client

import gv_services.common_pb2
import gv_services.broadcaster_pb2


class BroadcasterBase(abc.ABC):

    @abc.abstractmethod
    async def subscribe(self, stream):
        pass

    @abc.abstractmethod
    async def publish(self, stream):
        pass

    def __mapping__(self):
        return {
            '/gv_services.Broadcaster/subscribe': grpclib.const.Handler(
                self.subscribe,
                grpclib.const.Cardinality.UNARY_STREAM,
                gv_services.broadcaster_pb2.sub_request,
                gv_services.common_pb2.pubsub_data,
            ),
            '/gv_services.Broadcaster/publish': grpclib.const.Handler(
                self.publish,
                grpclib.const.Cardinality.UNARY_UNARY,
                gv_services.common_pb2.pubsub_data,
                gv_services.common_pb2.pub_ack,
            ),
        }


class BroadcasterStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.subscribe = grpclib.client.UnaryStreamMethod(
            channel,
            '/gv_services.Broadcaster/subscribe',
            gv_services.broadcaster_pb2.sub_request,
            gv_services.common_pb2.pubsub_data,
        )
        self.publish = grpclib.client.UnaryUnaryMethod(
            channel,
            '/gv_services.Broadcaster/publish',
            gv_services.common_pb2.pubsub_data,
            gv_services.common_pb2.pub_ack,
        )
